{
    "projectName": "BankApp",
    "projectType": "Maven",
    "springBootVersion": "2.1.4.RELEASE",
    "classes": [
        {
            "name": "BankingApplicationTests",
            "packageName": "com.coding.exercise.bankapp",
            "type": "class",
            "annotations": [
                "@RunWith(SpringRunner.class)",
                "@SpringBootTest"
            ],
            "methods": [
                {
                    "name": "contextLoads",
                    "returnType": "void",
                    "parameters": [],
                    "annotations": [
                        "@Test"
                    ],
                    "exceptionsThrown": [],
                    "visibility": "public",
                    "packageName": "com.coding.exercise.bankapp",
                    "className": "BankingApplicationTests",
                    "calledMethods": [],
                    "externalCalls": [],
                    "daoOperations": [],
                    "localVariables": [],
                    "parameterAnnotations": [],
                    "returnTypeAnnotations": [],
                    "sqlQueries": null,
                    "sqlTables": null,
                    "sqlOperations": null,
                    "static": false,
                    "abstract": false
                }
            ],
            "fields": [],
            "parentClass": null,
            "interfaces": [],
            "filePath": "/tmp/repos/repo_107185cb/src/test/java/com/coding/exercise/bankapp/BankingApplicationTests.java",
            "interface": false,
            "abstract": false
        },
        {
            "name": "CustomerRepository",
            "packageName": "com.coding.exercise.bankapp.repository",
            "type": "repository",
            "annotations": [
                "@Repository"
            ],
            "methods": [
                {
                    "name": "findByCustomerNumber",
                    "returnType": "Optional<Customer>",
                    "parameters": [
                        "Long customerNumber"
                    ],
                    "annotations": [],
                    "exceptionsThrown": [],
                    "visibility": "public",
                    "packageName": "com.coding.exercise.bankapp.repository",
                    "className": "CustomerRepository",
                    "calledMethods": [],
                    "externalCalls": [],
                    "daoOperations": [],
                    "localVariables": [],
                    "parameterAnnotations": [
                        []
                    ],
                    "returnTypeAnnotations": [],
                    "sqlQueries": null,
                    "sqlTables": null,
                    "sqlOperations": null,
                    "static": false,
                    "abstract": true
                }
            ],
            "fields": [],
            "parentClass": "CrudRepository",
            "interfaces": [],
            "filePath": "/tmp/repos/repo_107185cb/src/main/java/com/coding/exercise/bankapp/repository/CustomerRepository.java",
            "interface": true,
            "abstract": false
        },
        {
            "name": "TransactionRepository",
            "packageName": "com.coding.exercise.bankapp.repository",
            "type": "repository",
            "annotations": [
                "@Repository"
            ],
            "methods": [
                {
                    "name": "findByAccountNumber",
                    "returnType": "Optional<List<Transaction>>",
                    "parameters": [
                        "Long accountNumber"
                    ],
                    "annotations": [],
                    "exceptionsThrown": [],
                    "visibility": "public",
                    "packageName": "com.coding.exercise.bankapp.repository",
                    "className": "TransactionRepository",
                    "calledMethods": [],
                    "externalCalls": [],
                    "daoOperations": [],
                    "localVariables": [],
                    "parameterAnnotations": [
                        []
                    ],
                    "returnTypeAnnotations": [],
                    "sqlQueries": null,
                    "sqlTables": null,
                    "sqlOperations": null,
                    "static": false,
                    "abstract": true
                }
            ],
            "fields": [],
            "parentClass": "CrudRepository",
            "interfaces": [],
            "filePath": "/tmp/repos/repo_107185cb/src/main/java/com/coding/exercise/bankapp/repository/TransactionRepository.java",
            "interface": true,
            "abstract": false
        },
        {
            "name": "AccountRepository",
            "packageName": "com.coding.exercise.bankapp.repository",
            "type": "repository",
            "annotations": [
                "@Repository"
            ],
            "methods": [
                {
                    "name": "findByAccountNumber",
                    "returnType": "Optional<Account>",
                    "parameters": [
                        "Long accountNumber"
                    ],
                    "annotations": [],
                    "exceptionsThrown": [],
                    "visibility": "public",
                    "packageName": "com.coding.exercise.bankapp.repository",
                    "className": "AccountRepository",
                    "calledMethods": [],
                    "externalCalls": [],
                    "daoOperations": [],
                    "localVariables": [],
                    "parameterAnnotations": [
                        []
                    ],
                    "returnTypeAnnotations": [],
                    "sqlQueries": null,
                    "sqlTables": null,
                    "sqlOperations": null,
                    "static": false,
                    "abstract": true
                }
            ],
            "fields": [],
            "parentClass": "CrudRepository",
            "interfaces": [],
            "filePath": "/tmp/repos/repo_107185cb/src/main/java/com/coding/exercise/bankapp/repository/AccountRepository.java",
            "interface": true,
            "abstract": false
        },
        {
            "name": "CustomerAccountXRefRepository",
            "packageName": "com.coding.exercise.bankapp.repository",
            "type": "repository",
            "annotations": [
                "@Repository"
            ],
            "methods": [],
            "fields": [],
            "parentClass": "CrudRepository",
            "interfaces": [],
            "filePath": "/tmp/repos/repo_107185cb/src/main/java/com/coding/exercise/bankapp/repository/CustomerAccountXRefRepository.java",
            "interface": true,
            "abstract": false
        },
        {
            "name": "ApplicationConfig",
            "packageName": "com.coding.exercise.bankapp.config",
            "type": "class",
            "annotations": [
                "@Configuration",
                "@EnableSwagger2"
            ],
            "methods": [
                {
                    "name": "api",
                    "returnType": "Docket",
                    "parameters": [],
                    "annotations": [
                        "@Bean"
                    ],
                    "exceptionsThrown": [],
                    "visibility": "public",
                    "packageName": "com.coding.exercise.bankapp.config",
                    "className": "ApplicationConfig",
                    "calledMethods": [
                        "springfox.documentation.builders.PathSelectors.any()",
                        "com.coding.exercise.bankapp.config.ApplicationConfig.apiInfo()",
                        "springfox.documentation.spring.web.plugins.Docket.apiInfo(springfox.documentation.service.ApiInfo)",
                        "springfox.documentation.spring.web.plugins.Docket.select()",
                        "springfox.documentation.spring.web.plugins.ApiSelectorBuilder.paths(com.google.common.base.Predicate<java.lang.String>)",
                        "springfox.documentation.spring.web.plugins.ApiSelectorBuilder.build()"
                    ],
                    "externalCalls": [],
                    "daoOperations": [],
                    "localVariables": [],
                    "parameterAnnotations": [],
                    "returnTypeAnnotations": [],
                    "sqlQueries": null,
                    "sqlTables": null,
                    "sqlOperations": null,
                    "static": false,
                    "abstract": false
                },
                {
                    "name": "apiInfo",
                    "returnType": "ApiInfo",
                    "parameters": [],
                    "annotations": [],
                    "exceptionsThrown": [],
                    "visibility": "private",
                    "packageName": "com.coding.exercise.bankapp.config",
                    "className": "ApplicationConfig",
                    "calledMethods": [
                        "springfox.documentation.builders.ApiInfoBuilder.title(java.lang.String)",
                        "springfox.documentation.builders.ApiInfoBuilder.description(java.lang.String)",
                        "springfox.documentation.builders.ApiInfoBuilder.version(java.lang.String)",
                        "springfox.documentation.builders.ApiInfoBuilder.build()"
                    ],
                    "externalCalls": [],
                    "daoOperations": [],
                    "localVariables": [],
                    "parameterAnnotations": [],
                    "returnTypeAnnotations": [],
                    "sqlQueries": null,
                    "sqlTables": null,
                    "sqlOperations": null,
                    "static": false,
                    "abstract": false
                }
            ],
            "fields": [],
            "parentClass": null,
            "interfaces": [],
            "filePath": "/tmp/repos/repo_107185cb/src/main/java/com/coding/exercise/bankapp/config/ApplicationConfig.java",
            "interface": false,
            "abstract": false
        },
        {
            "name": "SecurityConfig",
            "packageName": "com.coding.exercise.bankapp.config",
            "type": "class",
            "annotations": [
                "@Configuration"
            ],
            "methods": [
                {
                    "name": "configure",
                    "returnType": "void",
                    "parameters": [
                        "HttpSecurity httpSecurity"
                    ],
                    "annotations": [
                        "@Override"
                    ],
                    "exceptionsThrown": [
                        "Exception"
                    ],
                    "visibility": "protected",
                    "packageName": "com.coding.exercise.bankapp.config",
                    "className": "SecurityConfig",
                    "calledMethods": [
                        "org.springframework.security.config.annotation.web.builders.HttpSecurity.authorizeRequests()",
                        "org.springframework.security.config.annotation.web.AbstractRequestMatcherRegistry.antMatchers(java.lang.String...)",
                        "org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer.AuthorizedUrl.permitAll()",
                        "org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer.ExpressionInterceptUrlRegistry.and()",
                        "UNRESOLVED_CALL: H.authorizeRequests()",
                        "UNRESOLVED_CALL: httpSecurity.authorizeRequests().antMatchers(\"/\").permitAll().and().authorizeRequests().antMatchers(java.lang.String)",
                        "UNRESOLVED_CALL: httpSecurity.authorizeRequests().antMatchers(\"/\").permitAll().and().authorizeRequests().antMatchers(\"/h2-console/**\").permitAll()",
                        "org.springframework.security.config.annotation.web.builders.HttpSecurity.csrf()",
                        "org.springframework.security.config.annotation.web.configurers.AbstractHttpConfigurer.disable()",
                        "org.springframework.security.config.annotation.web.builders.HttpSecurity.headers()",
                        "org.springframework.security.config.annotation.web.configurers.HeadersConfigurer.frameOptions()",
                        "org.springframework.security.config.annotation.web.configurers.HeadersConfigurer.FrameOptionsConfig.disable()"
                    ],
                    "externalCalls": [],
                    "daoOperations": [],
                    "localVariables": [],
                    "parameterAnnotations": [
                        []
                    ],
                    "returnTypeAnnotations": [],
                    "sqlQueries": null,
                    "sqlTables": null,
                    "sqlOperations": null,
                    "static": false,
                    "abstract": false
                }
            ],
            "fields": [],
            "parentClass": "WebSecurityConfigurerAdapter",
            "interfaces": [],
            "filePath": "/tmp/repos/repo_107185cb/src/main/java/com/coding/exercise/bankapp/config/SecurityConfig.java",
            "interface": false,
            "abstract": false
        },
        {
            "name": "CustomerController",
            "packageName": "com.coding.exercise.bankapp.controller",
            "type": "controller",
            "annotations": [
                "@RestController",
                "@RequestMapping(\"customers\")",
                "@Api(tags = { \"Customer REST endpoints\" })"
            ],
            "methods": [
                {
                    "name": "getAllCustomers",
                    "returnType": "List<CustomerDetails>",
                    "parameters": [],
                    "annotations": [
                        "@GetMapping(path = \"/all\")",
                        "@ApiOperation(value = \"Find all customers\", notes = \"Gets details of all the customers\")",
                        "@ApiResponses(value = { @ApiResponse(code = 200, message = \"Success\"), @ApiResponse(code = 400, message = \"Bad Request\"), @ApiResponse(code = 500, message = \"Internal Server Error\") })"
                    ],
                    "exceptionsThrown": [],
                    "visibility": "public",
                    "packageName": "com.coding.exercise.bankapp.controller",
                    "className": "CustomerController",
                    "calledMethods": [
                        "com.coding.exercise.bankapp.service.BankingServiceImpl.findAll()"
                    ],
                    "externalCalls": [],
                    "daoOperations": [],
                    "localVariables": [],
                    "parameterAnnotations": [],
                    "returnTypeAnnotations": [],
                    "sqlQueries": null,
                    "sqlTables": null,
                    "sqlOperations": null,
                    "static": false,
                    "abstract": false
                },
                {
                    "name": "addCustomer",
                    "returnType": "ResponseEntity<Object>",
                    "parameters": [
                        "CustomerDetails customer"
                    ],
                    "annotations": [
                        "@PostMapping(path = \"/add\")",
                        "@ApiOperation(value = \"Add a Customer\", notes = \"Add customer and create an account\")",
                        "@ApiResponses(value = { @ApiResponse(code = 200, message = \"Success\"), @ApiResponse(code = 400, message = \"Bad Request\"), @ApiResponse(code = 500, message = \"Internal Server Error\") })"
                    ],
                    "exceptionsThrown": [],
                    "visibility": "public",
                    "packageName": "com.coding.exercise.bankapp.controller",
                    "className": "CustomerController",
                    "calledMethods": [
                        "com.coding.exercise.bankapp.service.BankingServiceImpl.addCustomer(com.coding.exercise.bankapp.domain.CustomerDetails)"
                    ],
                    "externalCalls": [],
                    "daoOperations": [],
                    "localVariables": [],
                    "parameterAnnotations": [
                        [
                            "@RequestBody"
                        ]
                    ],
                    "returnTypeAnnotations": [],
                    "sqlQueries": null,
                    "sqlTables": null,
                    "sqlOperations": null,
                    "static": false,
                    "abstract": false
                },
                {
                    "name": "getCustomer",
                    "returnType": "CustomerDetails",
                    "parameters": [
                        "Long customerNumber"
                    ],
                    "annotations": [
                        "@GetMapping(path = \"/{customerNumber}\")",
                        "@ApiOperation(value = \"Get customer details\", notes = \"Get Customer details by customer number.\")",
                        "@ApiResponses(value = { @ApiResponse(code = 200, message = \"Success\", response = CustomerDetails.class, responseContainer = \"Object\"), @ApiResponse(code = 400, message = \"Bad Request\"), @ApiResponse(code = 500, message = \"Internal Server Error\") })"
                    ],
                    "exceptionsThrown": [],
                    "visibility": "public",
                    "packageName": "com.coding.exercise.bankapp.controller",
                    "className": "CustomerController",
                    "calledMethods": [
                        "com.coding.exercise.bankapp.service.BankingServiceImpl.findByCustomerNumber(java.lang.Long)"
                    ],
                    "externalCalls": [],
                    "daoOperations": [],
                    "localVariables": [],
                    "parameterAnnotations": [
                        [
                            "@PathVariable"
                        ]
                    ],
                    "returnTypeAnnotations": [],
                    "sqlQueries": null,
                    "sqlTables": null,
                    "sqlOperations": null,
                    "static": false,
                    "abstract": false
                },
                {
                    "name": "updateCustomer",
                    "returnType": "ResponseEntity<Object>",
                    "parameters": [
                        "CustomerDetails customerDetails",
                        "Long customerNumber"
                    ],
                    "annotations": [
                        "@PutMapping(path = \"/{customerNumber}\")",
                        "@ApiOperation(value = \"Update customer\", notes = \"Update customer and any other account information associated with him.\")",
                        "@ApiResponses(value = { @ApiResponse(code = 200, message = \"Success\", response = Object.class), @ApiResponse(code = 400, message = \"Bad Request\"), @ApiResponse(code = 500, message = \"Internal Server Error\") })"
                    ],
                    "exceptionsThrown": [],
                    "visibility": "public",
                    "packageName": "com.coding.exercise.bankapp.controller",
                    "className": "CustomerController",
                    "calledMethods": [
                        "com.coding.exercise.bankapp.service.BankingServiceImpl.updateCustomer(com.coding.exercise.bankapp.domain.CustomerDetails, java.lang.Long)"
                    ],
                    "externalCalls": [],
                    "daoOperations": [],
                    "localVariables": [],
                    "parameterAnnotations": [
                        [
                            "@RequestBody"
                        ],
                        [
                            "@PathVariable"
                        ]
                    ],
                    "returnTypeAnnotations": [],
                    "sqlQueries": null,
                    "sqlTables": null,
                    "sqlOperations": null,
                    "static": false,
                    "abstract": false
                },
                {
                    "name": "deleteCustomer",
                    "returnType": "ResponseEntity<Object>",
                    "parameters": [
                        "Long customerNumber"
                    ],
                    "annotations": [
                        "@DeleteMapping(path = \"/{customerNumber}\")",
                        "@ApiOperation(value = \"Delete customer and related accounts\", notes = \"Delete customer and all accounts associated with him.\")",
                        "@ApiResponses(value = { @ApiResponse(code = 200, message = \"Success\", response = Object.class), @ApiResponse(code = 400, message = \"Bad Request\"), @ApiResponse(code = 500, message = \"Internal Server Error\") })"
                    ],
                    "exceptionsThrown": [],
                    "visibility": "public",
                    "packageName": "com.coding.exercise.bankapp.controller",
                    "className": "CustomerController",
                    "calledMethods": [
                        "com.coding.exercise.bankapp.service.BankingServiceImpl.deleteCustomer(java.lang.Long)"
                    ],
                    "externalCalls": [],
                    "daoOperations": [],
                    "localVariables": [],
                    "parameterAnnotations": [
                        [
                            "@PathVariable"
                        ]
                    ],
                    "returnTypeAnnotations": [],
                    "sqlQueries": null,
                    "sqlTables": null,
                    "sqlOperations": null,
                    "static": false,
                    "abstract": false
                }
            ],
            "fields": [
                {
                    "name": "bankingService",
                    "type": "com.coding.exercise.bankapp.service.BankingServiceImpl",
                    "annotations": [
                        "@Autowired"
                    ],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                }
            ],
            "parentClass": null,
            "interfaces": [],
            "filePath": "/tmp/repos/repo_107185cb/src/main/java/com/coding/exercise/bankapp/controller/CustomerController.java",
            "interface": false,
            "abstract": false
        },
        {
            "name": "AccountController",
            "packageName": "com.coding.exercise.bankapp.controller",
            "type": "controller",
            "annotations": [
                "@RestController",
                "@RequestMapping(\"accounts\")",
                "@Api(tags = { \"Accounts and Transactions REST endpoints\" })"
            ],
            "methods": [
                {
                    "name": "getByAccountNumber",
                    "returnType": "ResponseEntity<Object>",
                    "parameters": [
                        "Long accountNumber"
                    ],
                    "annotations": [
                        "@GetMapping(path = \"/{accountNumber}\")",
                        "@ApiOperation(value = \"Get account details\", notes = \"Find account details by account number\")",
                        "@ApiResponses(value = { @ApiResponse(code = 200, message = \"Success\"), @ApiResponse(code = 400, message = \"Bad Request\"), @ApiResponse(code = 500, message = \"Internal Server Error\") })"
                    ],
                    "exceptionsThrown": [],
                    "visibility": "public",
                    "packageName": "com.coding.exercise.bankapp.controller",
                    "className": "AccountController",
                    "calledMethods": [
                        "com.coding.exercise.bankapp.service.BankingServiceImpl.findByAccountNumber(java.lang.Long)"
                    ],
                    "externalCalls": [],
                    "daoOperations": [],
                    "localVariables": [],
                    "parameterAnnotations": [
                        [
                            "@PathVariable"
                        ]
                    ],
                    "returnTypeAnnotations": [],
                    "sqlQueries": null,
                    "sqlTables": null,
                    "sqlOperations": null,
                    "static": false,
                    "abstract": false
                },
                {
                    "name": "addNewAccount",
                    "returnType": "ResponseEntity<Object>",
                    "parameters": [
                        "AccountInformation accountInformation",
                        "Long customerNumber"
                    ],
                    "annotations": [
                        "@PostMapping(path = \"/add/{customerNumber}\")",
                        "@ApiOperation(value = \"Add a new account\", notes = \"Create an new account for existing customer.\")",
                        "@ApiResponses(value = { @ApiResponse(code = 200, message = \"Success\"), @ApiResponse(code = 400, message = \"Bad Request\"), @ApiResponse(code = 500, message = \"Internal Server Error\") })"
                    ],
                    "exceptionsThrown": [],
                    "visibility": "public",
                    "packageName": "com.coding.exercise.bankapp.controller",
                    "className": "AccountController",
                    "calledMethods": [
                        "com.coding.exercise.bankapp.service.BankingServiceImpl.addNewAccount(com.coding.exercise.bankapp.domain.AccountInformation, java.lang.Long)"
                    ],
                    "externalCalls": [],
                    "daoOperations": [],
                    "localVariables": [],
                    "parameterAnnotations": [
                        [
                            "@RequestBody"
                        ],
                        [
                            "@PathVariable"
                        ]
                    ],
                    "returnTypeAnnotations": [],
                    "sqlQueries": null,
                    "sqlTables": null,
                    "sqlOperations": null,
                    "static": false,
                    "abstract": false
                },
                {
                    "name": "transferDetails",
                    "returnType": "ResponseEntity<Object>",
                    "parameters": [
                        "TransferDetails transferDetails",
                        "Long customerNumber"
                    ],
                    "annotations": [
                        "@PutMapping(path = \"/transfer/{customerNumber}\")",
                        "@ApiOperation(value = \"Transfer funds between accounts\", notes = \"Transfer funds between accounts.\")",
                        "@ApiResponses(value = { @ApiResponse(code = 200, message = \"Success\", response = Object.class), @ApiResponse(code = 400, message = \"Bad Request\"), @ApiResponse(code = 500, message = \"Internal Server Error\") })"
                    ],
                    "exceptionsThrown": [],
                    "visibility": "public",
                    "packageName": "com.coding.exercise.bankapp.controller",
                    "className": "AccountController",
                    "calledMethods": [
                        "com.coding.exercise.bankapp.service.BankingServiceImpl.transferDetails(com.coding.exercise.bankapp.domain.TransferDetails, java.lang.Long)"
                    ],
                    "externalCalls": [],
                    "daoOperations": [],
                    "localVariables": [],
                    "parameterAnnotations": [
                        [
                            "@RequestBody"
                        ],
                        [
                            "@PathVariable"
                        ]
                    ],
                    "returnTypeAnnotations": [],
                    "sqlQueries": null,
                    "sqlTables": null,
                    "sqlOperations": null,
                    "static": false,
                    "abstract": false
                },
                {
                    "name": "getTransactionByAccountNumber",
                    "returnType": "List<TransactionDetails>",
                    "parameters": [
                        "Long accountNumber"
                    ],
                    "annotations": [
                        "@GetMapping(path = \"/transactions/{accountNumber}\")",
                        "@ApiOperation(value = \"Get all transactions\", notes = \"Get all Transactions by account number\")",
                        "@ApiResponses(value = { @ApiResponse(code = 200, message = \"Success\"), @ApiResponse(code = 400, message = \"Bad Request\"), @ApiResponse(code = 500, message = \"Internal Server Error\") })"
                    ],
                    "exceptionsThrown": [],
                    "visibility": "public",
                    "packageName": "com.coding.exercise.bankapp.controller",
                    "className": "AccountController",
                    "calledMethods": [
                        "com.coding.exercise.bankapp.service.BankingServiceImpl.findTransactionsByAccountNumber(java.lang.Long)"
                    ],
                    "externalCalls": [],
                    "daoOperations": [],
                    "localVariables": [],
                    "parameterAnnotations": [
                        [
                            "@PathVariable"
                        ]
                    ],
                    "returnTypeAnnotations": [],
                    "sqlQueries": null,
                    "sqlTables": null,
                    "sqlOperations": null,
                    "static": false,
                    "abstract": false
                }
            ],
            "fields": [
                {
                    "name": "bankingService",
                    "type": "com.coding.exercise.bankapp.service.BankingServiceImpl",
                    "annotations": [
                        "@Autowired"
                    ],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                }
            ],
            "parentClass": null,
            "interfaces": [],
            "filePath": "/tmp/repos/repo_107185cb/src/main/java/com/coding/exercise/bankapp/controller/AccountController.java",
            "interface": false,
            "abstract": false
        },
        {
            "name": "Customer",
            "packageName": "com.coding.exercise.bankapp.model",
            "type": "entity",
            "annotations": [
                "@Entity",
                "@Data",
                "@Builder",
                "@AllArgsConstructor",
                "@NoArgsConstructor"
            ],
            "methods": [],
            "fields": [
                {
                    "name": "id",
                    "type": "java.util.UUID",
                    "annotations": [
                        "@Id",
                        "@GeneratedValue",
                        "@Column(name = \"CUST_ID\")"
                    ],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "firstName",
                    "type": "java.lang.String",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "lastName",
                    "type": "java.lang.String",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "middleName",
                    "type": "java.lang.String",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "customerNumber",
                    "type": "java.lang.Long",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "status",
                    "type": "java.lang.String",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "customerAddress",
                    "type": "com.coding.exercise.bankapp.model.Address",
                    "annotations": [
                        "@ManyToOne(cascade = CascadeType.ALL)"
                    ],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "contactDetails",
                    "type": "com.coding.exercise.bankapp.model.Contact",
                    "annotations": [
                        "@OneToOne(cascade = CascadeType.ALL)"
                    ],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "createDateTime",
                    "type": "java.util.Date",
                    "annotations": [
                        "@Temporal(TemporalType.TIME)"
                    ],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "updateDateTime",
                    "type": "java.util.Date",
                    "annotations": [
                        "@Temporal(TemporalType.TIME)"
                    ],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                }
            ],
            "parentClass": null,
            "interfaces": [],
            "filePath": "/tmp/repos/repo_107185cb/src/main/java/com/coding/exercise/bankapp/model/Customer.java",
            "interface": false,
            "abstract": false
        },
        {
            "name": "Contact",
            "packageName": "com.coding.exercise.bankapp.model",
            "type": "entity",
            "annotations": [
                "@AllArgsConstructor",
                "@NoArgsConstructor",
                "@Data",
                "@Builder",
                "@Entity"
            ],
            "methods": [],
            "fields": [
                {
                    "name": "id",
                    "type": "java.util.UUID",
                    "annotations": [
                        "@Id",
                        "@GeneratedValue(strategy = GenerationType.AUTO)",
                        "@Column(name = \"CONTACT_ID\")"
                    ],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "emailId",
                    "type": "java.lang.String",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "homePhone",
                    "type": "java.lang.String",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "workPhone",
                    "type": "java.lang.String",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                }
            ],
            "parentClass": null,
            "interfaces": [],
            "filePath": "/tmp/repos/repo_107185cb/src/main/java/com/coding/exercise/bankapp/model/Contact.java",
            "interface": false,
            "abstract": false
        },
        {
            "name": "Address",
            "packageName": "com.coding.exercise.bankapp.model",
            "type": "entity",
            "annotations": [
                "@NoArgsConstructor",
                "@AllArgsConstructor",
                "@Data",
                "@Builder",
                "@Entity"
            ],
            "methods": [],
            "fields": [
                {
                    "name": "id",
                    "type": "java.util.UUID",
                    "annotations": [
                        "@Id",
                        "@GeneratedValue(strategy = GenerationType.AUTO)",
                        "@Column(name = \"ADDR_ID\")"
                    ],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "address1",
                    "type": "java.lang.String",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "address2",
                    "type": "java.lang.String",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "city",
                    "type": "java.lang.String",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "state",
                    "type": "java.lang.String",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "zip",
                    "type": "java.lang.String",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "country",
                    "type": "java.lang.String",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                }
            ],
            "parentClass": null,
            "interfaces": [],
            "filePath": "/tmp/repos/repo_107185cb/src/main/java/com/coding/exercise/bankapp/model/Address.java",
            "interface": false,
            "abstract": false
        },
        {
            "name": "Account",
            "packageName": "com.coding.exercise.bankapp.model",
            "type": "entity",
            "annotations": [
                "@Entity",
                "@AllArgsConstructor",
                "@NoArgsConstructor",
                "@Data",
                "@Builder"
            ],
            "methods": [],
            "fields": [
                {
                    "name": "id",
                    "type": "java.util.UUID",
                    "annotations": [
                        "@Id",
                        "@GeneratedValue(strategy = GenerationType.AUTO)",
                        "@Column(name = \"ACCT_ID\")"
                    ],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "accountNumber",
                    "type": "java.lang.Long",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "bankInformation",
                    "type": "com.coding.exercise.bankapp.model.BankInfo",
                    "annotations": [
                        "@OneToOne(cascade = CascadeType.ALL)"
                    ],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "accountStatus",
                    "type": "java.lang.String",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "accountType",
                    "type": "java.lang.String",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "accountBalance",
                    "type": "java.lang.Double",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "createDateTime",
                    "type": "java.util.Date",
                    "annotations": [
                        "@Temporal(TemporalType.TIME)"
                    ],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "updateDateTime",
                    "type": "java.util.Date",
                    "annotations": [
                        "@Temporal(TemporalType.TIME)"
                    ],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                }
            ],
            "parentClass": null,
            "interfaces": [],
            "filePath": "/tmp/repos/repo_107185cb/src/main/java/com/coding/exercise/bankapp/model/Account.java",
            "interface": false,
            "abstract": false
        },
        {
            "name": "CustomerAccountXRef",
            "packageName": "com.coding.exercise.bankapp.model",
            "type": "entity",
            "annotations": [
                "@Entity",
                "@AllArgsConstructor",
                "@NoArgsConstructor",
                "@Data",
                "@Builder"
            ],
            "methods": [],
            "fields": [
                {
                    "name": "id",
                    "type": "java.util.UUID",
                    "annotations": [
                        "@Id",
                        "@GeneratedValue(strategy = GenerationType.AUTO)",
                        "@Column(name = \"CUST_ACC_XREF_ID\")"
                    ],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "accountNumber",
                    "type": "java.lang.Long",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "customerNumber",
                    "type": "java.lang.Long",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                }
            ],
            "parentClass": null,
            "interfaces": [],
            "filePath": "/tmp/repos/repo_107185cb/src/main/java/com/coding/exercise/bankapp/model/CustomerAccountXRef.java",
            "interface": false,
            "abstract": false
        },
        {
            "name": "BankInfo",
            "packageName": "com.coding.exercise.bankapp.model",
            "type": "entity",
            "annotations": [
                "@NoArgsConstructor",
                "@AllArgsConstructor",
                "@Data",
                "@Builder",
                "@Entity"
            ],
            "methods": [],
            "fields": [
                {
                    "name": "id",
                    "type": "java.util.UUID",
                    "annotations": [
                        "@Id",
                        "@GeneratedValue(strategy = GenerationType.AUTO)",
                        "@Column(name = \"BANK_ID\")"
                    ],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "branchName",
                    "type": "java.lang.String",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "branchCode",
                    "type": "java.lang.Integer",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "branchAddress",
                    "type": "com.coding.exercise.bankapp.model.Address",
                    "annotations": [
                        "@OneToOne(cascade = CascadeType.ALL)"
                    ],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "routingNumber",
                    "type": "java.lang.Integer",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                }
            ],
            "parentClass": null,
            "interfaces": [],
            "filePath": "/tmp/repos/repo_107185cb/src/main/java/com/coding/exercise/bankapp/model/BankInfo.java",
            "interface": false,
            "abstract": false
        },
        {
            "name": "Transaction",
            "packageName": "com.coding.exercise.bankapp.model",
            "type": "entity",
            "annotations": [
                "@Entity",
                "@Data",
                "@Builder",
                "@AllArgsConstructor",
                "@NoArgsConstructor"
            ],
            "methods": [],
            "fields": [
                {
                    "name": "id",
                    "type": "java.util.UUID",
                    "annotations": [
                        "@Id",
                        "@GeneratedValue(strategy = GenerationType.AUTO)",
                        "@Column(name = \"TX_ID\")"
                    ],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "accountNumber",
                    "type": "java.lang.Long",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "txDateTime",
                    "type": "java.util.Date",
                    "annotations": [
                        "@Temporal(TemporalType.TIME)"
                    ],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "txType",
                    "type": "java.lang.String",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "txAmount",
                    "type": "java.lang.Double",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                }
            ],
            "parentClass": null,
            "interfaces": [],
            "filePath": "/tmp/repos/repo_107185cb/src/main/java/com/coding/exercise/bankapp/model/Transaction.java",
            "interface": false,
            "abstract": false
        },
        {
            "name": "BankingService",
            "packageName": "com.coding.exercise.bankapp.service",
            "type": "interface",
            "annotations": [],
            "methods": [
                {
                    "name": "findAll",
                    "returnType": "List<CustomerDetails>",
                    "parameters": [],
                    "annotations": [],
                    "exceptionsThrown": [],
                    "visibility": "public",
                    "packageName": "com.coding.exercise.bankapp.service",
                    "className": "BankingService",
                    "calledMethods": [],
                    "externalCalls": [],
                    "daoOperations": [],
                    "localVariables": [],
                    "parameterAnnotations": [],
                    "returnTypeAnnotations": [],
                    "sqlQueries": null,
                    "sqlTables": null,
                    "sqlOperations": null,
                    "static": false,
                    "abstract": true
                },
                {
                    "name": "addCustomer",
                    "returnType": "ResponseEntity<Object>",
                    "parameters": [
                        "CustomerDetails customerDetails"
                    ],
                    "annotations": [],
                    "exceptionsThrown": [],
                    "visibility": "public",
                    "packageName": "com.coding.exercise.bankapp.service",
                    "className": "BankingService",
                    "calledMethods": [],
                    "externalCalls": [],
                    "daoOperations": [],
                    "localVariables": [],
                    "parameterAnnotations": [
                        []
                    ],
                    "returnTypeAnnotations": [],
                    "sqlQueries": null,
                    "sqlTables": null,
                    "sqlOperations": null,
                    "static": false,
                    "abstract": true
                },
                {
                    "name": "findByCustomerNumber",
                    "returnType": "CustomerDetails",
                    "parameters": [
                        "Long customerNumber"
                    ],
                    "annotations": [],
                    "exceptionsThrown": [],
                    "visibility": "public",
                    "packageName": "com.coding.exercise.bankapp.service",
                    "className": "BankingService",
                    "calledMethods": [],
                    "externalCalls": [],
                    "daoOperations": [],
                    "localVariables": [],
                    "parameterAnnotations": [
                        []
                    ],
                    "returnTypeAnnotations": [],
                    "sqlQueries": null,
                    "sqlTables": null,
                    "sqlOperations": null,
                    "static": false,
                    "abstract": true
                },
                {
                    "name": "updateCustomer",
                    "returnType": "ResponseEntity<Object>",
                    "parameters": [
                        "CustomerDetails customerDetails",
                        "Long customerNumber"
                    ],
                    "annotations": [],
                    "exceptionsThrown": [],
                    "visibility": "public",
                    "packageName": "com.coding.exercise.bankapp.service",
                    "className": "BankingService",
                    "calledMethods": [],
                    "externalCalls": [],
                    "daoOperations": [],
                    "localVariables": [],
                    "parameterAnnotations": [
                        [],
                        []
                    ],
                    "returnTypeAnnotations": [],
                    "sqlQueries": null,
                    "sqlTables": null,
                    "sqlOperations": null,
                    "static": false,
                    "abstract": true
                },
                {
                    "name": "deleteCustomer",
                    "returnType": "ResponseEntity<Object>",
                    "parameters": [
                        "Long customerNumber"
                    ],
                    "annotations": [],
                    "exceptionsThrown": [],
                    "visibility": "public",
                    "packageName": "com.coding.exercise.bankapp.service",
                    "className": "BankingService",
                    "calledMethods": [],
                    "externalCalls": [],
                    "daoOperations": [],
                    "localVariables": [],
                    "parameterAnnotations": [
                        []
                    ],
                    "returnTypeAnnotations": [],
                    "sqlQueries": null,
                    "sqlTables": null,
                    "sqlOperations": null,
                    "static": false,
                    "abstract": true
                },
                {
                    "name": "findByAccountNumber",
                    "returnType": "ResponseEntity<Object>",
                    "parameters": [
                        "Long accountNumber"
                    ],
                    "annotations": [],
                    "exceptionsThrown": [],
                    "visibility": "public",
                    "packageName": "com.coding.exercise.bankapp.service",
                    "className": "BankingService",
                    "calledMethods": [],
                    "externalCalls": [],
                    "daoOperations": [],
                    "localVariables": [],
                    "parameterAnnotations": [
                        []
                    ],
                    "returnTypeAnnotations": [],
                    "sqlQueries": null,
                    "sqlTables": null,
                    "sqlOperations": null,
                    "static": false,
                    "abstract": true
                },
                {
                    "name": "addNewAccount",
                    "returnType": "ResponseEntity<Object>",
                    "parameters": [
                        "AccountInformation accountInformation",
                        "Long customerNumber"
                    ],
                    "annotations": [],
                    "exceptionsThrown": [],
                    "visibility": "public",
                    "packageName": "com.coding.exercise.bankapp.service",
                    "className": "BankingService",
                    "calledMethods": [],
                    "externalCalls": [],
                    "daoOperations": [],
                    "localVariables": [],
                    "parameterAnnotations": [
                        [],
                        []
                    ],
                    "returnTypeAnnotations": [],
                    "sqlQueries": null,
                    "sqlTables": null,
                    "sqlOperations": null,
                    "static": false,
                    "abstract": true
                },
                {
                    "name": "transferDetails",
                    "returnType": "ResponseEntity<Object>",
                    "parameters": [
                        "TransferDetails transferDetails",
                        "Long customerNumber"
                    ],
                    "annotations": [],
                    "exceptionsThrown": [],
                    "visibility": "public",
                    "packageName": "com.coding.exercise.bankapp.service",
                    "className": "BankingService",
                    "calledMethods": [],
                    "externalCalls": [],
                    "daoOperations": [],
                    "localVariables": [],
                    "parameterAnnotations": [
                        [],
                        []
                    ],
                    "returnTypeAnnotations": [],
                    "sqlQueries": null,
                    "sqlTables": null,
                    "sqlOperations": null,
                    "static": false,
                    "abstract": true
                },
                {
                    "name": "findTransactionsByAccountNumber",
                    "returnType": "List<TransactionDetails>",
                    "parameters": [
                        "Long accountNumber"
                    ],
                    "annotations": [],
                    "exceptionsThrown": [],
                    "visibility": "public",
                    "packageName": "com.coding.exercise.bankapp.service",
                    "className": "BankingService",
                    "calledMethods": [],
                    "externalCalls": [],
                    "daoOperations": [],
                    "localVariables": [],
                    "parameterAnnotations": [
                        []
                    ],
                    "returnTypeAnnotations": [],
                    "sqlQueries": null,
                    "sqlTables": null,
                    "sqlOperations": null,
                    "static": false,
                    "abstract": true
                }
            ],
            "fields": [],
            "parentClass": null,
            "interfaces": [],
            "filePath": "/tmp/repos/repo_107185cb/src/main/java/com/coding/exercise/bankapp/service/BankingService.java",
            "interface": true,
            "abstract": false
        },
        {
            "name": "BankingServiceImpl",
            "packageName": "com.coding.exercise.bankapp.service",
            "type": "service",
            "annotations": [
                "@Service",
                "@Transactional"
            ],
            "methods": [
                {
                    "name": "findAll",
                    "returnType": "List<CustomerDetails>",
                    "parameters": [],
                    "annotations": [],
                    "exceptionsThrown": [],
                    "visibility": "public",
                    "packageName": "com.coding.exercise.bankapp.service",
                    "className": "BankingServiceImpl",
                    "calledMethods": [
                        "org.springframework.data.repository.CrudRepository.findAll()",
                        "com.coding.exercise.bankapp.service.helper.BankingServiceHelper.convertToCustomerDomain(com.coding.exercise.bankapp.model.Customer)",
                        "java.util.List.add(E)",
                        "java.lang.Iterable.forEach(java.util.function.Consumer<? super T>)"
                    ],
                    "externalCalls": [],
                    "daoOperations": [],
                    "localVariables": [
                        "List<CustomerDetails> allCustomerDetails",
                        "Iterable<Customer> customerList"
                    ],
                    "parameterAnnotations": [],
                    "returnTypeAnnotations": [],
                    "sqlQueries": null,
                    "sqlTables": null,
                    "sqlOperations": null,
                    "static": false,
                    "abstract": false
                },
                {
                    "name": "addCustomer",
                    "returnType": "ResponseEntity<Object>",
                    "parameters": [
                        "CustomerDetails customerDetails"
                    ],
                    "annotations": [],
                    "exceptionsThrown": [],
                    "visibility": "public",
                    "packageName": "com.coding.exercise.bankapp.service",
                    "className": "BankingServiceImpl",
                    "calledMethods": [
                        "com.coding.exercise.bankapp.service.helper.BankingServiceHelper.convertToCustomerEntity(com.coding.exercise.bankapp.domain.CustomerDetails)",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.setCreateDateTime(java.util.Date)",
                        "org.springframework.data.repository.CrudRepository.save(S)",
                        "org.springframework.http.ResponseEntity.status(org.springframework.http.HttpStatus)",
                        "org.springframework.http.ResponseEntity.BodyBuilder.body(T)"
                    ],
                    "externalCalls": [],
                    "daoOperations": [],
                    "localVariables": [
                        "Customer customer"
                    ],
                    "parameterAnnotations": [
                        []
                    ],
                    "returnTypeAnnotations": [],
                    "sqlQueries": null,
                    "sqlTables": null,
                    "sqlOperations": null,
                    "static": false,
                    "abstract": false
                },
                {
                    "name": "findByCustomerNumber",
                    "returnType": "CustomerDetails",
                    "parameters": [
                        "Long customerNumber"
                    ],
                    "annotations": [],
                    "exceptionsThrown": [],
                    "visibility": "public",
                    "packageName": "com.coding.exercise.bankapp.service",
                    "className": "BankingServiceImpl",
                    "calledMethods": [
                        "com.coding.exercise.bankapp.repository.CustomerRepository.findByCustomerNumber(java.lang.Long)",
                        "java.util.Optional.isPresent()",
                        "java.util.Optional.get()",
                        "com.coding.exercise.bankapp.service.helper.BankingServiceHelper.convertToCustomerDomain(com.coding.exercise.bankapp.model.Customer)"
                    ],
                    "externalCalls": [],
                    "daoOperations": [],
                    "localVariables": [
                        "Optional<Customer> customerEntityOpt"
                    ],
                    "parameterAnnotations": [
                        []
                    ],
                    "returnTypeAnnotations": [],
                    "sqlQueries": null,
                    "sqlTables": null,
                    "sqlOperations": null,
                    "static": false,
                    "abstract": false
                },
                {
                    "name": "updateCustomer",
                    "returnType": "ResponseEntity<Object>",
                    "parameters": [
                        "CustomerDetails customerDetails",
                        "Long customerNumber"
                    ],
                    "annotations": [],
                    "exceptionsThrown": [],
                    "visibility": "public",
                    "packageName": "com.coding.exercise.bankapp.service",
                    "className": "BankingServiceImpl",
                    "calledMethods": [
                        "com.coding.exercise.bankapp.repository.CustomerRepository.findByCustomerNumber(java.lang.Long)",
                        "com.coding.exercise.bankapp.service.helper.BankingServiceHelper.convertToCustomerEntity(com.coding.exercise.bankapp.domain.CustomerDetails)",
                        "java.util.Optional.isPresent()",
                        "org.springframework.http.ResponseEntity.status(org.springframework.http.HttpStatus)",
                        "org.springframework.http.ResponseEntity.BodyBuilder.body(T)",
                        "java.util.Optional.get()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getContactDetails()",
                        "UNRESOLVED_CALL: java.util.Optional<T>.ofNullable(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: Optional.ofNullable(unmanagedCustomerEntity.getContactDetails()).isPresent()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getContactDetails()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getContactDetails()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.setContactDetails(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getContactDetails()",
                        "UNRESOLVED_CALL: unmanagedCustomerEntity.getContactDetails().getEmailId()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Contact.setEmailId(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getContactDetails()",
                        "UNRESOLVED_CALL: unmanagedCustomerEntity.getContactDetails().getHomePhone()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Contact.setHomePhone(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getContactDetails()",
                        "UNRESOLVED_CALL: unmanagedCustomerEntity.getContactDetails().getWorkPhone()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Contact.setWorkPhone(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getCustomerAddress()",
                        "UNRESOLVED_CALL: java.util.Optional<T>.ofNullable(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: Optional.ofNullable(unmanagedCustomerEntity.getCustomerAddress()).isPresent()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getCustomerAddress()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getCustomerAddress()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.setCustomerAddress(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getCustomerAddress()",
                        "UNRESOLVED_CALL: unmanagedCustomerEntity.getCustomerAddress().getAddress1()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Address.setAddress1(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getCustomerAddress()",
                        "UNRESOLVED_CALL: unmanagedCustomerEntity.getCustomerAddress().getAddress2()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Address.setAddress2(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getCustomerAddress()",
                        "UNRESOLVED_CALL: unmanagedCustomerEntity.getCustomerAddress().getCity()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Address.setCity(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getCustomerAddress()",
                        "UNRESOLVED_CALL: unmanagedCustomerEntity.getCustomerAddress().getState()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Address.setState(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getCustomerAddress()",
                        "UNRESOLVED_CALL: unmanagedCustomerEntity.getCustomerAddress().getZip()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Address.setZip(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getCustomerAddress()",
                        "UNRESOLVED_CALL: unmanagedCustomerEntity.getCustomerAddress().getCountry()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Address.setCountry(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.setUpdateDateTime(java.util.Date)",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getStatus()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.setStatus(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getFirstName()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.setFirstName(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getMiddleName()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.setMiddleName(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getLastName()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.setLastName(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.setUpdateDateTime(java.util.Date)",
                        "org.springframework.data.repository.CrudRepository.save(S)",
                        "org.springframework.http.ResponseEntity.status(org.springframework.http.HttpStatus)",
                        "org.springframework.http.ResponseEntity.BodyBuilder.body(T)"
                    ],
                    "externalCalls": [],
                    "daoOperations": [],
                    "localVariables": [
                        "Optional<Customer> managedCustomerEntityOpt",
                        "Customer unmanagedCustomerEntity",
                        "Customer managedCustomerEntity",
                        "Contact managedContact",
                        "Address managedAddress"
                    ],
                    "parameterAnnotations": [
                        [],
                        []
                    ],
                    "returnTypeAnnotations": [],
                    "sqlQueries": null,
                    "sqlTables": null,
                    "sqlOperations": null,
                    "static": false,
                    "abstract": false
                },
                {
                    "name": "deleteCustomer",
                    "returnType": "ResponseEntity<Object>",
                    "parameters": [
                        "Long customerNumber"
                    ],
                    "annotations": [],
                    "exceptionsThrown": [],
                    "visibility": "public",
                    "packageName": "com.coding.exercise.bankapp.service",
                    "className": "BankingServiceImpl",
                    "calledMethods": [
                        "com.coding.exercise.bankapp.repository.CustomerRepository.findByCustomerNumber(java.lang.Long)",
                        "java.util.Optional.isPresent()",
                        "org.springframework.http.ResponseEntity.status(org.springframework.http.HttpStatus)",
                        "org.springframework.http.ResponseEntity.BodyBuilder.body(T)",
                        "java.util.Optional.get()",
                        "org.springframework.data.repository.CrudRepository.delete(T)",
                        "org.springframework.http.ResponseEntity.status(org.springframework.http.HttpStatus)",
                        "org.springframework.http.ResponseEntity.BodyBuilder.body(T)"
                    ],
                    "externalCalls": [],
                    "daoOperations": [],
                    "localVariables": [
                        "Optional<Customer> managedCustomerEntityOpt",
                        "Customer managedCustomerEntity"
                    ],
                    "parameterAnnotations": [
                        []
                    ],
                    "returnTypeAnnotations": [],
                    "sqlQueries": null,
                    "sqlTables": null,
                    "sqlOperations": null,
                    "static": false,
                    "abstract": false
                },
                {
                    "name": "findByAccountNumber",
                    "returnType": "ResponseEntity<Object>",
                    "parameters": [
                        "Long accountNumber"
                    ],
                    "annotations": [],
                    "exceptionsThrown": [],
                    "visibility": "public",
                    "packageName": "com.coding.exercise.bankapp.service",
                    "className": "BankingServiceImpl",
                    "calledMethods": [
                        "com.coding.exercise.bankapp.repository.AccountRepository.findByAccountNumber(java.lang.Long)",
                        "java.util.Optional.isPresent()",
                        "org.springframework.http.ResponseEntity.status(org.springframework.http.HttpStatus)",
                        "org.springframework.http.ResponseEntity.BodyBuilder.body(T)",
                        "java.util.Optional.get()",
                        "com.coding.exercise.bankapp.service.helper.BankingServiceHelper.convertToAccountDomain(com.coding.exercise.bankapp.model.Account)",
                        "org.springframework.http.ResponseEntity.status(org.springframework.http.HttpStatus)",
                        "org.springframework.http.ResponseEntity.BodyBuilder.body(T)"
                    ],
                    "externalCalls": [],
                    "daoOperations": [],
                    "localVariables": [
                        "Optional<Account> accountEntityOpt"
                    ],
                    "parameterAnnotations": [
                        []
                    ],
                    "returnTypeAnnotations": [],
                    "sqlQueries": null,
                    "sqlTables": null,
                    "sqlOperations": null,
                    "static": false,
                    "abstract": false
                },
                {
                    "name": "addNewAccount",
                    "returnType": "ResponseEntity<Object>",
                    "parameters": [
                        "AccountInformation accountInformation",
                        "Long customerNumber"
                    ],
                    "annotations": [],
                    "exceptionsThrown": [],
                    "visibility": "public",
                    "packageName": "com.coding.exercise.bankapp.service",
                    "className": "BankingServiceImpl",
                    "calledMethods": [
                        "com.coding.exercise.bankapp.repository.CustomerRepository.findByCustomerNumber(java.lang.Long)",
                        "java.util.Optional.isPresent()",
                        "com.coding.exercise.bankapp.service.helper.BankingServiceHelper.convertToAccountEntity(com.coding.exercise.bankapp.domain.AccountInformation)",
                        "org.springframework.data.repository.CrudRepository.save(S)",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.AccountInformation.getAccountNumber()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.CustomerAccountXRef.builder()",
                        "UNRESOLVED_CALL: CustomerAccountXRef.builder().accountNumber(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: CustomerAccountXRef.builder().accountNumber(accountInformation.getAccountNumber()).customerNumber(java.lang.Long)",
                        "UNRESOLVED_CALL: CustomerAccountXRef.builder().accountNumber(accountInformation.getAccountNumber()).customerNumber(customerNumber).build()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.repository.CustomerAccountXRefRepository.save(UNKNOWN_PARAM_TYPE)",
                        "org.springframework.http.ResponseEntity.status(org.springframework.http.HttpStatus)",
                        "org.springframework.http.ResponseEntity.BodyBuilder.body(T)"
                    ],
                    "externalCalls": [],
                    "daoOperations": [],
                    "localVariables": [
                        "Optional<Customer> customerEntityOpt"
                    ],
                    "parameterAnnotations": [
                        [],
                        []
                    ],
                    "returnTypeAnnotations": [],
                    "sqlQueries": null,
                    "sqlTables": null,
                    "sqlOperations": null,
                    "static": false,
                    "abstract": false
                },
                {
                    "name": "transferDetails",
                    "returnType": "ResponseEntity<Object>",
                    "parameters": [
                        "TransferDetails transferDetails",
                        "Long customerNumber"
                    ],
                    "annotations": [],
                    "exceptionsThrown": [],
                    "visibility": "public",
                    "packageName": "com.coding.exercise.bankapp.service",
                    "className": "BankingServiceImpl",
                    "calledMethods": [
                        "com.coding.exercise.bankapp.repository.CustomerRepository.findByCustomerNumber(java.lang.Long)",
                        "java.util.Optional.isPresent()",
                        "org.springframework.http.ResponseEntity.status(org.springframework.http.HttpStatus)",
                        "org.springframework.http.ResponseEntity.BodyBuilder.body(T)",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.TransferDetails.getFromAccountNumber()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.repository.AccountRepository.findByAccountNumber(UNKNOWN_PARAM_TYPE)",
                        "java.util.Optional.isPresent()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.TransferDetails.getFromAccountNumber()",
                        "org.springframework.http.ResponseEntity.status(org.springframework.http.HttpStatus)",
                        "UNRESOLVED_CALL: org.springframework.http.ResponseEntity.BodyBuilder.body(UNKNOWN_PARAM_TYPE)",
                        "java.util.Optional.get()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.TransferDetails.getToAccountNumber()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.repository.AccountRepository.findByAccountNumber(UNKNOWN_PARAM_TYPE)",
                        "java.util.Optional.isPresent()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.TransferDetails.getToAccountNumber()",
                        "org.springframework.http.ResponseEntity.status(org.springframework.http.HttpStatus)",
                        "UNRESOLVED_CALL: org.springframework.http.ResponseEntity.BodyBuilder.body(UNKNOWN_PARAM_TYPE)",
                        "java.util.Optional.get()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Account.getAccountBalance()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.TransferDetails.getTransferAmount()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Account.getAccountBalance()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.TransferDetails.getTransferAmount()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Account.setAccountBalance(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Account.setUpdateDateTime(java.util.Date)",
                        "java.util.List.add(E)",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Account.getAccountBalance()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.TransferDetails.getTransferAmount()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Account.setAccountBalance(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Account.setUpdateDateTime(java.util.Date)",
                        "java.util.List.add(E)",
                        "org.springframework.data.repository.CrudRepository.saveAll(java.lang.Iterable<S>)",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Account.getAccountNumber()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.service.helper.BankingServiceHelper.createTransaction(com.coding.exercise.bankapp.domain.TransferDetails, UNKNOWN_PARAM_TYPE, java.lang.String)",
                        "org.springframework.data.repository.CrudRepository.save(S)",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Account.getAccountNumber()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.service.helper.BankingServiceHelper.createTransaction(com.coding.exercise.bankapp.domain.TransferDetails, UNKNOWN_PARAM_TYPE, java.lang.String)",
                        "org.springframework.data.repository.CrudRepository.save(S)",
                        "org.springframework.http.ResponseEntity.status(org.springframework.http.HttpStatus)",
                        "org.springframework.http.ResponseEntity.BodyBuilder.body(T)",
                        "org.springframework.http.ResponseEntity.status(org.springframework.http.HttpStatus)",
                        "org.springframework.http.ResponseEntity.BodyBuilder.body(T)"
                    ],
                    "externalCalls": [],
                    "daoOperations": [],
                    "localVariables": [
                        "List<Account> accountEntities",
                        "Account fromAccountEntity",
                        "Account toAccountEntity",
                        "Optional<Customer> customerEntityOpt",
                        "Optional<Account> fromAccountEntityOpt",
                        "Optional<Account> toAccountEntityOpt",
                        "Transaction fromTransaction",
                        "Transaction toTransaction"
                    ],
                    "parameterAnnotations": [
                        [],
                        []
                    ],
                    "returnTypeAnnotations": [],
                    "sqlQueries": null,
                    "sqlTables": null,
                    "sqlOperations": null,
                    "static": false,
                    "abstract": false
                },
                {
                    "name": "findTransactionsByAccountNumber",
                    "returnType": "List<TransactionDetails>",
                    "parameters": [
                        "Long accountNumber"
                    ],
                    "annotations": [],
                    "exceptionsThrown": [],
                    "visibility": "public",
                    "packageName": "com.coding.exercise.bankapp.service",
                    "className": "BankingServiceImpl",
                    "calledMethods": [
                        "com.coding.exercise.bankapp.repository.AccountRepository.findByAccountNumber(java.lang.Long)",
                        "java.util.Optional.isPresent()",
                        "com.coding.exercise.bankapp.repository.TransactionRepository.findByAccountNumber(java.lang.Long)",
                        "java.util.Optional.isPresent()",
                        "com.coding.exercise.bankapp.service.helper.BankingServiceHelper.convertToTransactionDomain(com.coding.exercise.bankapp.model.Transaction)",
                        "java.util.List.add(E)",
                        "java.util.Optional.get()",
                        "java.lang.Iterable.forEach(java.util.function.Consumer<? super T>)"
                    ],
                    "externalCalls": [],
                    "daoOperations": [],
                    "localVariables": [
                        "List<TransactionDetails> transactionDetails",
                        "Optional<Account> accountEntityOpt",
                        "Optional<List<Transaction>> transactionEntitiesOpt"
                    ],
                    "parameterAnnotations": [
                        []
                    ],
                    "returnTypeAnnotations": [],
                    "sqlQueries": null,
                    "sqlTables": null,
                    "sqlOperations": null,
                    "static": false,
                    "abstract": false
                }
            ],
            "fields": [
                {
                    "name": "customerRepository",
                    "type": "com.coding.exercise.bankapp.repository.CustomerRepository",
                    "annotations": [
                        "@Autowired"
                    ],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "accountRepository",
                    "type": "com.coding.exercise.bankapp.repository.AccountRepository",
                    "annotations": [
                        "@Autowired"
                    ],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "transactionRepository",
                    "type": "com.coding.exercise.bankapp.repository.TransactionRepository",
                    "annotations": [
                        "@Autowired"
                    ],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "custAccXRefRepository",
                    "type": "com.coding.exercise.bankapp.repository.CustomerAccountXRefRepository",
                    "annotations": [
                        "@Autowired"
                    ],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "bankingServiceHelper",
                    "type": "com.coding.exercise.bankapp.service.helper.BankingServiceHelper",
                    "annotations": [
                        "@Autowired"
                    ],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                }
            ],
            "parentClass": null,
            "interfaces": [
                "BankingService"
            ],
            "filePath": "/tmp/repos/repo_107185cb/src/main/java/com/coding/exercise/bankapp/service/BankingServiceImpl.java",
            "interface": false,
            "abstract": false
        },
        {
            "name": "BankingServiceHelper",
            "packageName": "com.coding.exercise.bankapp.service.helper",
            "type": "component",
            "annotations": [
                "@Component"
            ],
            "methods": [
                {
                    "name": "convertToCustomerDomain",
                    "returnType": "CustomerDetails",
                    "parameters": [
                        "Customer customer"
                    ],
                    "annotations": [],
                    "exceptionsThrown": [],
                    "visibility": "public",
                    "packageName": "com.coding.exercise.bankapp.service.helper",
                    "className": "BankingServiceHelper",
                    "calledMethods": [
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getCustomerAddress()",
                        "UNRESOLVED_CALL: BankingServiceHelper.convertToAddressDomain(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getContactDetails()",
                        "UNRESOLVED_CALL: BankingServiceHelper.convertToContactDomain(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getStatus()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getCustomerNumber()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getLastName()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getMiddleName()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getFirstName()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.CustomerDetails.builder()",
                        "UNRESOLVED_CALL: CustomerDetails.builder().firstName(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: CustomerDetails.builder().firstName(customer.getFirstName()).middleName(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: CustomerDetails.builder().firstName(customer.getFirstName()).middleName(customer.getMiddleName()).lastName(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: CustomerDetails.builder().firstName(customer.getFirstName()).middleName(customer.getMiddleName()).lastName(customer.getLastName()).customerNumber(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: CustomerDetails.builder().firstName(customer.getFirstName()).middleName(customer.getMiddleName()).lastName(customer.getLastName()).customerNumber(customer.getCustomerNumber()).status(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: CustomerDetails.builder().firstName(customer.getFirstName()).middleName(customer.getMiddleName()).lastName(customer.getLastName()).customerNumber(customer.getCustomerNumber()).status(customer.getStatus()).contactDetails(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: CustomerDetails.builder().firstName(customer.getFirstName()).middleName(customer.getMiddleName()).lastName(customer.getLastName()).customerNumber(customer.getCustomerNumber()).status(customer.getStatus()).contactDetails(convertToContactDomain(customer.getContactDetails())).customerAddress(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: CustomerDetails.builder().firstName(customer.getFirstName()).middleName(customer.getMiddleName()).lastName(customer.getLastName()).customerNumber(customer.getCustomerNumber()).status(customer.getStatus()).contactDetails(convertToContactDomain(customer.getContactDetails())).customerAddress(convertToAddressDomain(customer.getCustomerAddress())).build()"
                    ],
                    "externalCalls": [],
                    "daoOperations": [],
                    "localVariables": [],
                    "parameterAnnotations": [
                        []
                    ],
                    "returnTypeAnnotations": [],
                    "sqlQueries": null,
                    "sqlTables": null,
                    "sqlOperations": null,
                    "static": false,
                    "abstract": false
                },
                {
                    "name": "convertToCustomerEntity",
                    "returnType": "Customer",
                    "parameters": [
                        "CustomerDetails customerDetails"
                    ],
                    "annotations": [],
                    "exceptionsThrown": [],
                    "visibility": "public",
                    "packageName": "com.coding.exercise.bankapp.service.helper",
                    "className": "BankingServiceHelper",
                    "calledMethods": [
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.CustomerDetails.getCustomerAddress()",
                        "UNRESOLVED_CALL: BankingServiceHelper.convertToAddressEntity(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.CustomerDetails.getContactDetails()",
                        "UNRESOLVED_CALL: BankingServiceHelper.convertToContactEntity(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.CustomerDetails.getStatus()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.CustomerDetails.getCustomerNumber()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.CustomerDetails.getLastName()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.CustomerDetails.getMiddleName()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.CustomerDetails.getFirstName()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.builder()",
                        "UNRESOLVED_CALL: Customer.builder().firstName(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: Customer.builder().firstName(customerDetails.getFirstName()).middleName(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: Customer.builder().firstName(customerDetails.getFirstName()).middleName(customerDetails.getMiddleName()).lastName(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: Customer.builder().firstName(customerDetails.getFirstName()).middleName(customerDetails.getMiddleName()).lastName(customerDetails.getLastName()).customerNumber(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: Customer.builder().firstName(customerDetails.getFirstName()).middleName(customerDetails.getMiddleName()).lastName(customerDetails.getLastName()).customerNumber(customerDetails.getCustomerNumber()).status(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: Customer.builder().firstName(customerDetails.getFirstName()).middleName(customerDetails.getMiddleName()).lastName(customerDetails.getLastName()).customerNumber(customerDetails.getCustomerNumber()).status(customerDetails.getStatus()).contactDetails(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: Customer.builder().firstName(customerDetails.getFirstName()).middleName(customerDetails.getMiddleName()).lastName(customerDetails.getLastName()).customerNumber(customerDetails.getCustomerNumber()).status(customerDetails.getStatus()).contactDetails(convertToContactEntity(customerDetails.getContactDetails())).customerAddress(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: Customer.builder().firstName(customerDetails.getFirstName()).middleName(customerDetails.getMiddleName()).lastName(customerDetails.getLastName()).customerNumber(customerDetails.getCustomerNumber()).status(customerDetails.getStatus()).contactDetails(convertToContactEntity(customerDetails.getContactDetails())).customerAddress(convertToAddressEntity(customerDetails.getCustomerAddress())).build()"
                    ],
                    "externalCalls": [],
                    "daoOperations": [],
                    "localVariables": [],
                    "parameterAnnotations": [
                        []
                    ],
                    "returnTypeAnnotations": [],
                    "sqlQueries": null,
                    "sqlTables": null,
                    "sqlOperations": null,
                    "static": false,
                    "abstract": false
                },
                {
                    "name": "convertToAccountDomain",
                    "returnType": "AccountInformation",
                    "parameters": [
                        "Account account"
                    ],
                    "annotations": [],
                    "exceptionsThrown": [],
                    "visibility": "public",
                    "packageName": "com.coding.exercise.bankapp.service.helper",
                    "className": "BankingServiceHelper",
                    "calledMethods": [
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Account.getBankInformation()",
                        "UNRESOLVED_CALL: BankingServiceHelper.convertToBankInfoDomain(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Account.getAccountStatus()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Account.getAccountNumber()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Account.getAccountBalance()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Account.getAccountType()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.AccountInformation.builder()",
                        "UNRESOLVED_CALL: AccountInformation.builder().accountType(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: AccountInformation.builder().accountType(account.getAccountType()).accountBalance(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: AccountInformation.builder().accountType(account.getAccountType()).accountBalance(account.getAccountBalance()).accountNumber(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: AccountInformation.builder().accountType(account.getAccountType()).accountBalance(account.getAccountBalance()).accountNumber(account.getAccountNumber()).accountStatus(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: AccountInformation.builder().accountType(account.getAccountType()).accountBalance(account.getAccountBalance()).accountNumber(account.getAccountNumber()).accountStatus(account.getAccountStatus()).bankInformation(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: AccountInformation.builder().accountType(account.getAccountType()).accountBalance(account.getAccountBalance()).accountNumber(account.getAccountNumber()).accountStatus(account.getAccountStatus()).bankInformation(convertToBankInfoDomain(account.getBankInformation())).build()"
                    ],
                    "externalCalls": [],
                    "daoOperations": [],
                    "localVariables": [],
                    "parameterAnnotations": [
                        []
                    ],
                    "returnTypeAnnotations": [],
                    "sqlQueries": null,
                    "sqlTables": null,
                    "sqlOperations": null,
                    "static": false,
                    "abstract": false
                },
                {
                    "name": "convertToAccountEntity",
                    "returnType": "Account",
                    "parameters": [
                        "AccountInformation accInfo"
                    ],
                    "annotations": [],
                    "exceptionsThrown": [],
                    "visibility": "public",
                    "packageName": "com.coding.exercise.bankapp.service.helper",
                    "className": "BankingServiceHelper",
                    "calledMethods": [
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.AccountInformation.getBankInformation()",
                        "UNRESOLVED_CALL: BankingServiceHelper.convertToBankInfoEntity(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.AccountInformation.getAccountStatus()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.AccountInformation.getAccountNumber()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.AccountInformation.getAccountBalance()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.AccountInformation.getAccountType()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Account.builder()",
                        "UNRESOLVED_CALL: Account.builder().accountType(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: Account.builder().accountType(accInfo.getAccountType()).accountBalance(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: Account.builder().accountType(accInfo.getAccountType()).accountBalance(accInfo.getAccountBalance()).accountNumber(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: Account.builder().accountType(accInfo.getAccountType()).accountBalance(accInfo.getAccountBalance()).accountNumber(accInfo.getAccountNumber()).accountStatus(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: Account.builder().accountType(accInfo.getAccountType()).accountBalance(accInfo.getAccountBalance()).accountNumber(accInfo.getAccountNumber()).accountStatus(accInfo.getAccountStatus()).bankInformation(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: Account.builder().accountType(accInfo.getAccountType()).accountBalance(accInfo.getAccountBalance()).accountNumber(accInfo.getAccountNumber()).accountStatus(accInfo.getAccountStatus()).bankInformation(convertToBankInfoEntity(accInfo.getBankInformation())).build()"
                    ],
                    "externalCalls": [],
                    "daoOperations": [],
                    "localVariables": [],
                    "parameterAnnotations": [
                        []
                    ],
                    "returnTypeAnnotations": [],
                    "sqlQueries": null,
                    "sqlTables": null,
                    "sqlOperations": null,
                    "static": false,
                    "abstract": false
                },
                {
                    "name": "convertToAddressDomain",
                    "returnType": "AddressDetails",
                    "parameters": [
                        "Address address"
                    ],
                    "annotations": [],
                    "exceptionsThrown": [],
                    "visibility": "public",
                    "packageName": "com.coding.exercise.bankapp.service.helper",
                    "className": "BankingServiceHelper",
                    "calledMethods": [
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Address.getCountry()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Address.getZip()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Address.getState()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Address.getCity()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Address.getAddress2()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Address.getAddress1()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.AddressDetails.builder()",
                        "UNRESOLVED_CALL: AddressDetails.builder().address1(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: AddressDetails.builder().address1(address.getAddress1()).address2(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: AddressDetails.builder().address1(address.getAddress1()).address2(address.getAddress2()).city(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: AddressDetails.builder().address1(address.getAddress1()).address2(address.getAddress2()).city(address.getCity()).state(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: AddressDetails.builder().address1(address.getAddress1()).address2(address.getAddress2()).city(address.getCity()).state(address.getState()).zip(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: AddressDetails.builder().address1(address.getAddress1()).address2(address.getAddress2()).city(address.getCity()).state(address.getState()).zip(address.getZip()).country(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: AddressDetails.builder().address1(address.getAddress1()).address2(address.getAddress2()).city(address.getCity()).state(address.getState()).zip(address.getZip()).country(address.getCountry()).build()"
                    ],
                    "externalCalls": [],
                    "daoOperations": [],
                    "localVariables": [],
                    "parameterAnnotations": [
                        []
                    ],
                    "returnTypeAnnotations": [],
                    "sqlQueries": null,
                    "sqlTables": null,
                    "sqlOperations": null,
                    "static": false,
                    "abstract": false
                },
                {
                    "name": "convertToAddressEntity",
                    "returnType": "Address",
                    "parameters": [
                        "AddressDetails addressDetails"
                    ],
                    "annotations": [],
                    "exceptionsThrown": [],
                    "visibility": "public",
                    "packageName": "com.coding.exercise.bankapp.service.helper",
                    "className": "BankingServiceHelper",
                    "calledMethods": [
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.AddressDetails.getCountry()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.AddressDetails.getZip()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.AddressDetails.getState()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.AddressDetails.getCity()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.AddressDetails.getAddress2()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.AddressDetails.getAddress1()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Address.builder()",
                        "UNRESOLVED_CALL: Address.builder().address1(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: Address.builder().address1(addressDetails.getAddress1()).address2(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: Address.builder().address1(addressDetails.getAddress1()).address2(addressDetails.getAddress2()).city(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: Address.builder().address1(addressDetails.getAddress1()).address2(addressDetails.getAddress2()).city(addressDetails.getCity()).state(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: Address.builder().address1(addressDetails.getAddress1()).address2(addressDetails.getAddress2()).city(addressDetails.getCity()).state(addressDetails.getState()).zip(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: Address.builder().address1(addressDetails.getAddress1()).address2(addressDetails.getAddress2()).city(addressDetails.getCity()).state(addressDetails.getState()).zip(addressDetails.getZip()).country(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: Address.builder().address1(addressDetails.getAddress1()).address2(addressDetails.getAddress2()).city(addressDetails.getCity()).state(addressDetails.getState()).zip(addressDetails.getZip()).country(addressDetails.getCountry()).build()"
                    ],
                    "externalCalls": [],
                    "daoOperations": [],
                    "localVariables": [],
                    "parameterAnnotations": [
                        []
                    ],
                    "returnTypeAnnotations": [],
                    "sqlQueries": null,
                    "sqlTables": null,
                    "sqlOperations": null,
                    "static": false,
                    "abstract": false
                },
                {
                    "name": "convertToContactDomain",
                    "returnType": "ContactDetails",
                    "parameters": [
                        "Contact contact"
                    ],
                    "annotations": [],
                    "exceptionsThrown": [],
                    "visibility": "public",
                    "packageName": "com.coding.exercise.bankapp.service.helper",
                    "className": "BankingServiceHelper",
                    "calledMethods": [
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Contact.getWorkPhone()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Contact.getHomePhone()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Contact.getEmailId()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.ContactDetails.builder()",
                        "UNRESOLVED_CALL: ContactDetails.builder().emailId(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: ContactDetails.builder().emailId(contact.getEmailId()).homePhone(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: ContactDetails.builder().emailId(contact.getEmailId()).homePhone(contact.getHomePhone()).workPhone(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: ContactDetails.builder().emailId(contact.getEmailId()).homePhone(contact.getHomePhone()).workPhone(contact.getWorkPhone()).build()"
                    ],
                    "externalCalls": [],
                    "daoOperations": [],
                    "localVariables": [],
                    "parameterAnnotations": [
                        []
                    ],
                    "returnTypeAnnotations": [],
                    "sqlQueries": null,
                    "sqlTables": null,
                    "sqlOperations": null,
                    "static": false,
                    "abstract": false
                },
                {
                    "name": "convertToContactEntity",
                    "returnType": "Contact",
                    "parameters": [
                        "ContactDetails contactDetails"
                    ],
                    "annotations": [],
                    "exceptionsThrown": [],
                    "visibility": "public",
                    "packageName": "com.coding.exercise.bankapp.service.helper",
                    "className": "BankingServiceHelper",
                    "calledMethods": [
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.ContactDetails.getWorkPhone()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.ContactDetails.getHomePhone()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.ContactDetails.getEmailId()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Contact.builder()",
                        "UNRESOLVED_CALL: Contact.builder().emailId(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: Contact.builder().emailId(contactDetails.getEmailId()).homePhone(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: Contact.builder().emailId(contactDetails.getEmailId()).homePhone(contactDetails.getHomePhone()).workPhone(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: Contact.builder().emailId(contactDetails.getEmailId()).homePhone(contactDetails.getHomePhone()).workPhone(contactDetails.getWorkPhone()).build()"
                    ],
                    "externalCalls": [],
                    "daoOperations": [],
                    "localVariables": [],
                    "parameterAnnotations": [
                        []
                    ],
                    "returnTypeAnnotations": [],
                    "sqlQueries": null,
                    "sqlTables": null,
                    "sqlOperations": null,
                    "static": false,
                    "abstract": false
                },
                {
                    "name": "convertToBankInfoDomain",
                    "returnType": "BankInformation",
                    "parameters": [
                        "BankInfo bankInfo"
                    ],
                    "annotations": [],
                    "exceptionsThrown": [],
                    "visibility": "public",
                    "packageName": "com.coding.exercise.bankapp.service.helper",
                    "className": "BankingServiceHelper",
                    "calledMethods": [
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.BankInfo.getBranchAddress()",
                        "UNRESOLVED_CALL: BankingServiceHelper.convertToAddressDomain(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.BankInfo.getRoutingNumber()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.BankInfo.getBranchName()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.BankInfo.getBranchCode()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.BankInformation.builder()",
                        "UNRESOLVED_CALL: BankInformation.builder().branchCode(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: BankInformation.builder().branchCode(bankInfo.getBranchCode()).branchName(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: BankInformation.builder().branchCode(bankInfo.getBranchCode()).branchName(bankInfo.getBranchName()).routingNumber(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: BankInformation.builder().branchCode(bankInfo.getBranchCode()).branchName(bankInfo.getBranchName()).routingNumber(bankInfo.getRoutingNumber()).branchAddress(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: BankInformation.builder().branchCode(bankInfo.getBranchCode()).branchName(bankInfo.getBranchName()).routingNumber(bankInfo.getRoutingNumber()).branchAddress(convertToAddressDomain(bankInfo.getBranchAddress())).build()"
                    ],
                    "externalCalls": [],
                    "daoOperations": [],
                    "localVariables": [],
                    "parameterAnnotations": [
                        []
                    ],
                    "returnTypeAnnotations": [],
                    "sqlQueries": null,
                    "sqlTables": null,
                    "sqlOperations": null,
                    "static": false,
                    "abstract": false
                },
                {
                    "name": "convertToBankInfoEntity",
                    "returnType": "BankInfo",
                    "parameters": [
                        "BankInformation bankInformation"
                    ],
                    "annotations": [],
                    "exceptionsThrown": [],
                    "visibility": "public",
                    "packageName": "com.coding.exercise.bankapp.service.helper",
                    "className": "BankingServiceHelper",
                    "calledMethods": [
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.BankInformation.getBranchAddress()",
                        "UNRESOLVED_CALL: BankingServiceHelper.convertToAddressEntity(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.BankInformation.getRoutingNumber()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.BankInformation.getBranchName()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.BankInformation.getBranchCode()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.BankInfo.builder()",
                        "UNRESOLVED_CALL: BankInfo.builder().branchCode(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: BankInfo.builder().branchCode(bankInformation.getBranchCode()).branchName(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: BankInfo.builder().branchCode(bankInformation.getBranchCode()).branchName(bankInformation.getBranchName()).routingNumber(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: BankInfo.builder().branchCode(bankInformation.getBranchCode()).branchName(bankInformation.getBranchName()).routingNumber(bankInformation.getRoutingNumber()).branchAddress(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: BankInfo.builder().branchCode(bankInformation.getBranchCode()).branchName(bankInformation.getBranchName()).routingNumber(bankInformation.getRoutingNumber()).branchAddress(convertToAddressEntity(bankInformation.getBranchAddress())).build()"
                    ],
                    "externalCalls": [],
                    "daoOperations": [],
                    "localVariables": [],
                    "parameterAnnotations": [
                        []
                    ],
                    "returnTypeAnnotations": [],
                    "sqlQueries": null,
                    "sqlTables": null,
                    "sqlOperations": null,
                    "static": false,
                    "abstract": false
                },
                {
                    "name": "convertToTransactionDomain",
                    "returnType": "TransactionDetails",
                    "parameters": [
                        "Transaction transaction"
                    ],
                    "annotations": [],
                    "exceptionsThrown": [],
                    "visibility": "public",
                    "packageName": "com.coding.exercise.bankapp.service.helper",
                    "className": "BankingServiceHelper",
                    "calledMethods": [
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Transaction.getAccountNumber()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Transaction.getTxType()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Transaction.getTxDateTime()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Transaction.getTxAmount()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.TransactionDetails.builder()",
                        "UNRESOLVED_CALL: TransactionDetails.builder().txAmount(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: TransactionDetails.builder().txAmount(transaction.getTxAmount()).txDateTime(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: TransactionDetails.builder().txAmount(transaction.getTxAmount()).txDateTime(transaction.getTxDateTime()).txType(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: TransactionDetails.builder().txAmount(transaction.getTxAmount()).txDateTime(transaction.getTxDateTime()).txType(transaction.getTxType()).accountNumber(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: TransactionDetails.builder().txAmount(transaction.getTxAmount()).txDateTime(transaction.getTxDateTime()).txType(transaction.getTxType()).accountNumber(transaction.getAccountNumber()).build()"
                    ],
                    "externalCalls": [],
                    "daoOperations": [],
                    "localVariables": [],
                    "parameterAnnotations": [
                        []
                    ],
                    "returnTypeAnnotations": [],
                    "sqlQueries": null,
                    "sqlTables": null,
                    "sqlOperations": null,
                    "static": false,
                    "abstract": false
                },
                {
                    "name": "convertToTransactionEntity",
                    "returnType": "Transaction",
                    "parameters": [
                        "TransactionDetails transactionDetails"
                    ],
                    "annotations": [],
                    "exceptionsThrown": [],
                    "visibility": "public",
                    "packageName": "com.coding.exercise.bankapp.service.helper",
                    "className": "BankingServiceHelper",
                    "calledMethods": [
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.TransactionDetails.getAccountNumber()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.TransactionDetails.getTxType()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.TransactionDetails.getTxDateTime()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.TransactionDetails.getTxAmount()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Transaction.builder()",
                        "UNRESOLVED_CALL: Transaction.builder().txAmount(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: Transaction.builder().txAmount(transactionDetails.getTxAmount()).txDateTime(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: Transaction.builder().txAmount(transactionDetails.getTxAmount()).txDateTime(transactionDetails.getTxDateTime()).txType(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: Transaction.builder().txAmount(transactionDetails.getTxAmount()).txDateTime(transactionDetails.getTxDateTime()).txType(transactionDetails.getTxType()).accountNumber(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: Transaction.builder().txAmount(transactionDetails.getTxAmount()).txDateTime(transactionDetails.getTxDateTime()).txType(transactionDetails.getTxType()).accountNumber(transactionDetails.getAccountNumber()).build()"
                    ],
                    "externalCalls": [],
                    "daoOperations": [],
                    "localVariables": [],
                    "parameterAnnotations": [
                        []
                    ],
                    "returnTypeAnnotations": [],
                    "sqlQueries": null,
                    "sqlTables": null,
                    "sqlOperations": null,
                    "static": false,
                    "abstract": false
                },
                {
                    "name": "createTransaction",
                    "returnType": "Transaction",
                    "parameters": [
                        "TransferDetails transferDetails",
                        "Long accountNumber",
                        "String txType"
                    ],
                    "annotations": [],
                    "exceptionsThrown": [],
                    "visibility": "public",
                    "packageName": "com.coding.exercise.bankapp.service.helper",
                    "className": "BankingServiceHelper",
                    "calledMethods": [
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.TransferDetails.getTransferAmount()",
                        "UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Transaction.builder()",
                        "UNRESOLVED_CALL: Transaction.builder().accountNumber(java.lang.Long)",
                        "UNRESOLVED_CALL: Transaction.builder().accountNumber(accountNumber).txAmount(UNKNOWN_PARAM_TYPE)",
                        "UNRESOLVED_CALL: Transaction.builder().accountNumber(accountNumber).txAmount(transferDetails.getTransferAmount()).txType(java.lang.String)",
                        "UNRESOLVED_CALL: Transaction.builder().accountNumber(accountNumber).txAmount(transferDetails.getTransferAmount()).txType(txType).txDateTime(java.util.Date)",
                        "UNRESOLVED_CALL: Transaction.builder().accountNumber(accountNumber).txAmount(transferDetails.getTransferAmount()).txType(txType).txDateTime(new Date()).build()"
                    ],
                    "externalCalls": [],
                    "daoOperations": [],
                    "localVariables": [],
                    "parameterAnnotations": [
                        [],
                        [],
                        []
                    ],
                    "returnTypeAnnotations": [],
                    "sqlQueries": null,
                    "sqlTables": null,
                    "sqlOperations": null,
                    "static": false,
                    "abstract": false
                }
            ],
            "fields": [],
            "parentClass": null,
            "interfaces": [],
            "filePath": "/tmp/repos/repo_107185cb/src/main/java/com/coding/exercise/bankapp/service/helper/BankingServiceHelper.java",
            "interface": false,
            "abstract": false
        },
        {
            "name": "AddressDetails",
            "packageName": "com.coding.exercise.bankapp.domain",
            "type": "model",
            "annotations": [
                "@AllArgsConstructor",
                "@NoArgsConstructor",
                "@Getter",
                "@Setter",
                "@Builder"
            ],
            "methods": [],
            "fields": [
                {
                    "name": "address1",
                    "type": "java.lang.String",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "address2",
                    "type": "java.lang.String",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "city",
                    "type": "java.lang.String",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "state",
                    "type": "java.lang.String",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "zip",
                    "type": "java.lang.String",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "country",
                    "type": "java.lang.String",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                }
            ],
            "parentClass": null,
            "interfaces": [],
            "filePath": "/tmp/repos/repo_107185cb/src/main/java/com/coding/exercise/bankapp/domain/AddressDetails.java",
            "interface": false,
            "abstract": false
        },
        {
            "name": "BankInformation",
            "packageName": "com.coding.exercise.bankapp.domain",
            "type": "model",
            "annotations": [
                "@AllArgsConstructor",
                "@NoArgsConstructor",
                "@Getter",
                "@Setter",
                "@Builder"
            ],
            "methods": [],
            "fields": [
                {
                    "name": "branchName",
                    "type": "java.lang.String",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "branchCode",
                    "type": "java.lang.Integer",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "branchAddress",
                    "type": "com.coding.exercise.bankapp.domain.AddressDetails",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "routingNumber",
                    "type": "java.lang.Integer",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                }
            ],
            "parentClass": null,
            "interfaces": [],
            "filePath": "/tmp/repos/repo_107185cb/src/main/java/com/coding/exercise/bankapp/domain/BankInformation.java",
            "interface": false,
            "abstract": false
        },
        {
            "name": "TransactionDetails",
            "packageName": "com.coding.exercise.bankapp.domain",
            "type": "model",
            "annotations": [
                "@AllArgsConstructor",
                "@NoArgsConstructor",
                "@Getter",
                "@Setter",
                "@Builder"
            ],
            "methods": [],
            "fields": [
                {
                    "name": "accountNumber",
                    "type": "java.lang.Long",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "txDateTime",
                    "type": "java.util.Date",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "txType",
                    "type": "java.lang.String",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "txAmount",
                    "type": "java.lang.Double",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                }
            ],
            "parentClass": null,
            "interfaces": [],
            "filePath": "/tmp/repos/repo_107185cb/src/main/java/com/coding/exercise/bankapp/domain/TransactionDetails.java",
            "interface": false,
            "abstract": false
        },
        {
            "name": "CustomerDetails",
            "packageName": "com.coding.exercise.bankapp.domain",
            "type": "model",
            "annotations": [
                "@AllArgsConstructor",
                "@NoArgsConstructor",
                "@Getter",
                "@Setter",
                "@Builder"
            ],
            "methods": [],
            "fields": [
                {
                    "name": "firstName",
                    "type": "java.lang.String",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "lastName",
                    "type": "java.lang.String",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "middleName",
                    "type": "java.lang.String",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "customerNumber",
                    "type": "java.lang.Long",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "status",
                    "type": "java.lang.String",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "customerAddress",
                    "type": "com.coding.exercise.bankapp.domain.AddressDetails",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "contactDetails",
                    "type": "com.coding.exercise.bankapp.domain.ContactDetails",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                }
            ],
            "parentClass": null,
            "interfaces": [],
            "filePath": "/tmp/repos/repo_107185cb/src/main/java/com/coding/exercise/bankapp/domain/CustomerDetails.java",
            "interface": false,
            "abstract": false
        },
        {
            "name": "AccountInformation",
            "packageName": "com.coding.exercise.bankapp.domain",
            "type": "model",
            "annotations": [
                "@AllArgsConstructor",
                "@NoArgsConstructor",
                "@Getter",
                "@Setter",
                "@Builder"
            ],
            "methods": [],
            "fields": [
                {
                    "name": "accountNumber",
                    "type": "java.lang.Long",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "bankInformation",
                    "type": "com.coding.exercise.bankapp.domain.BankInformation",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "accountStatus",
                    "type": "java.lang.String",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "accountType",
                    "type": "java.lang.String",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "accountBalance",
                    "type": "java.lang.Double",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "accountCreated",
                    "type": "java.util.Date",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                }
            ],
            "parentClass": null,
            "interfaces": [],
            "filePath": "/tmp/repos/repo_107185cb/src/main/java/com/coding/exercise/bankapp/domain/AccountInformation.java",
            "interface": false,
            "abstract": false
        },
        {
            "name": "ContactDetails",
            "packageName": "com.coding.exercise.bankapp.domain",
            "type": "model",
            "annotations": [
                "@AllArgsConstructor",
                "@NoArgsConstructor",
                "@Getter",
                "@Setter",
                "@Builder"
            ],
            "methods": [],
            "fields": [
                {
                    "name": "emailId",
                    "type": "java.lang.String",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "homePhone",
                    "type": "java.lang.String",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "workPhone",
                    "type": "java.lang.String",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                }
            ],
            "parentClass": null,
            "interfaces": [],
            "filePath": "/tmp/repos/repo_107185cb/src/main/java/com/coding/exercise/bankapp/domain/ContactDetails.java",
            "interface": false,
            "abstract": false
        },
        {
            "name": "TransferDetails",
            "packageName": "com.coding.exercise.bankapp.domain",
            "type": "model",
            "annotations": [
                "@AllArgsConstructor",
                "@NoArgsConstructor",
                "@Getter",
                "@Setter"
            ],
            "methods": [],
            "fields": [
                {
                    "name": "fromAccountNumber",
                    "type": "java.lang.Long",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "toAccountNumber",
                    "type": "java.lang.Long",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                },
                {
                    "name": "transferAmount",
                    "type": "java.lang.Double",
                    "annotations": [],
                    "visibility": "private",
                    "initializer": null,
                    "static": false,
                    "final": false
                }
            ],
            "parentClass": null,
            "interfaces": [],
            "filePath": "/tmp/repos/repo_107185cb/src/main/java/com/coding/exercise/bankapp/domain/TransferDetails.java",
            "interface": false,
            "abstract": false
        },
        {
            "name": "BankingApplication",
            "packageName": "com.coding.exercise.bankapp",
            "type": "class",
            "annotations": [
                "@SpringBootApplication"
            ],
            "methods": [
                {
                    "name": "main",
                    "returnType": "void",
                    "parameters": [
                        "String[] args"
                    ],
                    "annotations": [],
                    "exceptionsThrown": [],
                    "visibility": "public",
                    "packageName": "com.coding.exercise.bankapp",
                    "className": "BankingApplication",
                    "calledMethods": [
                        "org.springframework.boot.SpringApplication.run(java.lang.Class<?>, java.lang.String...)"
                    ],
                    "externalCalls": [],
                    "daoOperations": [],
                    "localVariables": [],
                    "parameterAnnotations": [
                        []
                    ],
                    "returnTypeAnnotations": [],
                    "sqlQueries": null,
                    "sqlTables": null,
                    "sqlOperations": null,
                    "static": true,
                    "abstract": false
                }
            ],
            "fields": [],
            "parentClass": null,
            "interfaces": [],
            "filePath": "/tmp/repos/repo_107185cb/src/main/java/com/coding/exercise/bankapp/BankingApplication.java",
            "interface": false,
            "abstract": false
        }
    ],
    "endpoints": [
        {
            "path": "/all",
            "httpMethod": "GET",
            "handlerMethod": "com.coding.exercise.bankapp.controller.CustomerController.getAllCustomers",
            "className": "com.coding.exercise.bankapp.controller.CustomerController",
            "methodName": "getAllCustomers",
            "requestBodyType": null,
            "responseBodyType": "List<CustomerDetails>",
            "pathVariables": [],
            "requestParameters": [],
            "consumes": "application/json",
            "produces": "application/json",
            "type": "REST",
            "wsdlUrl": null,
            "operationName": null,
            "httpStatus": null,
            "requestParamDetails": null,
            "serviceName": null,
            "portName": null,
            "targetNamespace": null,
            "soapAction": null,
            "headers": null,
            "style": null,
            "use": null,
            "parameterStyle": null,
            "requestWrapperName": null,
            "requestWrapperClassName": null,
            "responseWrapperName": null,
            "responseWrapperClassName": null,
            "responseWrapperNamespace": null,
            "soapRequestHeaderQNames": null,
            "portTypeName": null,
            "requestHeaderParts": null,
            "responseHeaderParts": null
        },
        {
            "path": "/add",
            "httpMethod": "POST",
            "handlerMethod": "com.coding.exercise.bankapp.controller.CustomerController.addCustomer",
            "className": "com.coding.exercise.bankapp.controller.CustomerController",
            "methodName": "addCustomer",
            "requestBodyType": "CustomerDetails",
            "responseBodyType": "ResponseEntity<Object>",
            "pathVariables": [],
            "requestParameters": [],
            "consumes": "application/json",
            "produces": "application/json",
            "type": "REST",
            "wsdlUrl": null,
            "operationName": null,
            "httpStatus": null,
            "requestParamDetails": null,
            "serviceName": null,
            "portName": null,
            "targetNamespace": null,
            "soapAction": null,
            "headers": null,
            "style": null,
            "use": null,
            "parameterStyle": null,
            "requestWrapperName": null,
            "requestWrapperClassName": null,
            "responseWrapperName": null,
            "responseWrapperClassName": null,
            "responseWrapperNamespace": null,
            "soapRequestHeaderQNames": null,
            "portTypeName": null,
            "requestHeaderParts": null,
            "responseHeaderParts": null
        },
        {
            "path": "/{customerNumber}",
            "httpMethod": "GET",
            "handlerMethod": "com.coding.exercise.bankapp.controller.CustomerController.getCustomer",
            "className": "com.coding.exercise.bankapp.controller.CustomerController",
            "methodName": "getCustomer",
            "requestBodyType": null,
            "responseBodyType": "CustomerDetails",
            "pathVariables": [
                "customerNumber"
            ],
            "requestParameters": [],
            "consumes": "application/json",
            "produces": "application/json",
            "type": "REST",
            "wsdlUrl": null,
            "operationName": null,
            "httpStatus": null,
            "requestParamDetails": null,
            "serviceName": null,
            "portName": null,
            "targetNamespace": null,
            "soapAction": null,
            "headers": null,
            "style": null,
            "use": null,
            "parameterStyle": null,
            "requestWrapperName": null,
            "requestWrapperClassName": null,
            "responseWrapperName": null,
            "responseWrapperClassName": null,
            "responseWrapperNamespace": null,
            "soapRequestHeaderQNames": null,
            "portTypeName": null,
            "requestHeaderParts": null,
            "responseHeaderParts": null
        },
        {
            "path": "/{customerNumber}",
            "httpMethod": "PUT",
            "handlerMethod": "com.coding.exercise.bankapp.controller.CustomerController.updateCustomer",
            "className": "com.coding.exercise.bankapp.controller.CustomerController",
            "methodName": "updateCustomer",
            "requestBodyType": "CustomerDetails",
            "responseBodyType": "ResponseEntity<Object>",
            "pathVariables": [
                "customerNumber"
            ],
            "requestParameters": [],
            "consumes": "application/json",
            "produces": "application/json",
            "type": "REST",
            "wsdlUrl": null,
            "operationName": null,
            "httpStatus": null,
            "requestParamDetails": null,
            "serviceName": null,
            "portName": null,
            "targetNamespace": null,
            "soapAction": null,
            "headers": null,
            "style": null,
            "use": null,
            "parameterStyle": null,
            "requestWrapperName": null,
            "requestWrapperClassName": null,
            "responseWrapperName": null,
            "responseWrapperClassName": null,
            "responseWrapperNamespace": null,
            "soapRequestHeaderQNames": null,
            "portTypeName": null,
            "requestHeaderParts": null,
            "responseHeaderParts": null
        },
        {
            "path": "/{customerNumber}",
            "httpMethod": "DELETE",
            "handlerMethod": "com.coding.exercise.bankapp.controller.CustomerController.deleteCustomer",
            "className": "com.coding.exercise.bankapp.controller.CustomerController",
            "methodName": "deleteCustomer",
            "requestBodyType": null,
            "responseBodyType": "ResponseEntity<Object>",
            "pathVariables": [
                "customerNumber"
            ],
            "requestParameters": [],
            "consumes": "application/json",
            "produces": "application/json",
            "type": "REST",
            "wsdlUrl": null,
            "operationName": null,
            "httpStatus": null,
            "requestParamDetails": null,
            "serviceName": null,
            "portName": null,
            "targetNamespace": null,
            "soapAction": null,
            "headers": null,
            "style": null,
            "use": null,
            "parameterStyle": null,
            "requestWrapperName": null,
            "requestWrapperClassName": null,
            "responseWrapperName": null,
            "responseWrapperClassName": null,
            "responseWrapperNamespace": null,
            "soapRequestHeaderQNames": null,
            "portTypeName": null,
            "requestHeaderParts": null,
            "responseHeaderParts": null
        },
        {
            "path": "/{accountNumber}",
            "httpMethod": "GET",
            "handlerMethod": "com.coding.exercise.bankapp.controller.AccountController.getByAccountNumber",
            "className": "com.coding.exercise.bankapp.controller.AccountController",
            "methodName": "getByAccountNumber",
            "requestBodyType": null,
            "responseBodyType": "ResponseEntity<Object>",
            "pathVariables": [
                "accountNumber"
            ],
            "requestParameters": [],
            "consumes": "application/json",
            "produces": "application/json",
            "type": "REST",
            "wsdlUrl": null,
            "operationName": null,
            "httpStatus": null,
            "requestParamDetails": null,
            "serviceName": null,
            "portName": null,
            "targetNamespace": null,
            "soapAction": null,
            "headers": null,
            "style": null,
            "use": null,
            "parameterStyle": null,
            "requestWrapperName": null,
            "requestWrapperClassName": null,
            "responseWrapperName": null,
            "responseWrapperClassName": null,
            "responseWrapperNamespace": null,
            "soapRequestHeaderQNames": null,
            "portTypeName": null,
            "requestHeaderParts": null,
            "responseHeaderParts": null
        },
        {
            "path": "/add/{customerNumber}",
            "httpMethod": "POST",
            "handlerMethod": "com.coding.exercise.bankapp.controller.AccountController.addNewAccount",
            "className": "com.coding.exercise.bankapp.controller.AccountController",
            "methodName": "addNewAccount",
            "requestBodyType": "AccountInformation",
            "responseBodyType": "ResponseEntity<Object>",
            "pathVariables": [
                "customerNumber"
            ],
            "requestParameters": [],
            "consumes": "application/json",
            "produces": "application/json",
            "type": "REST",
            "wsdlUrl": null,
            "operationName": null,
            "httpStatus": null,
            "requestParamDetails": null,
            "serviceName": null,
            "portName": null,
            "targetNamespace": null,
            "soapAction": null,
            "headers": null,
            "style": null,
            "use": null,
            "parameterStyle": null,
            "requestWrapperName": null,
            "requestWrapperClassName": null,
            "responseWrapperName": null,
            "responseWrapperClassName": null,
            "responseWrapperNamespace": null,
            "soapRequestHeaderQNames": null,
            "portTypeName": null,
            "requestHeaderParts": null,
            "responseHeaderParts": null
        },
        {
            "path": "/transfer/{customerNumber}",
            "httpMethod": "PUT",
            "handlerMethod": "com.coding.exercise.bankapp.controller.AccountController.transferDetails",
            "className": "com.coding.exercise.bankapp.controller.AccountController",
            "methodName": "transferDetails",
            "requestBodyType": "TransferDetails",
            "responseBodyType": "ResponseEntity<Object>",
            "pathVariables": [
                "customerNumber"
            ],
            "requestParameters": [],
            "consumes": "application/json",
            "produces": "application/json",
            "type": "REST",
            "wsdlUrl": null,
            "operationName": null,
            "httpStatus": null,
            "requestParamDetails": null,
            "serviceName": null,
            "portName": null,
            "targetNamespace": null,
            "soapAction": null,
            "headers": null,
            "style": null,
            "use": null,
            "parameterStyle": null,
            "requestWrapperName": null,
            "requestWrapperClassName": null,
            "responseWrapperName": null,
            "responseWrapperClassName": null,
            "responseWrapperNamespace": null,
            "soapRequestHeaderQNames": null,
            "portTypeName": null,
            "requestHeaderParts": null,
            "responseHeaderParts": null
        },
        {
            "path": "/transactions/{accountNumber}",
            "httpMethod": "GET",
            "handlerMethod": "com.coding.exercise.bankapp.controller.AccountController.getTransactionByAccountNumber",
            "className": "com.coding.exercise.bankapp.controller.AccountController",
            "methodName": "getTransactionByAccountNumber",
            "requestBodyType": null,
            "responseBodyType": "List<TransactionDetails>",
            "pathVariables": [
                "accountNumber"
            ],
            "requestParameters": [],
            "consumes": "application/json",
            "produces": "application/json",
            "type": "REST",
            "wsdlUrl": null,
            "operationName": null,
            "httpStatus": null,
            "requestParamDetails": null,
            "serviceName": null,
            "portName": null,
            "targetNamespace": null,
            "soapAction": null,
            "headers": null,
            "style": null,
            "use": null,
            "parameterStyle": null,
            "requestWrapperName": null,
            "requestWrapperClassName": null,
            "responseWrapperName": null,
            "responseWrapperClassName": null,
            "responseWrapperNamespace": null,
            "soapRequestHeaderQNames": null,
            "portTypeName": null,
            "requestHeaderParts": null,
            "responseHeaderParts": null
        }
    ],
    "diagrams": {
        "DATABASE_DIAGRAM": "/generated-output/docs_107185cb/diagrams/database_schema.svg",
        "COMPONENT_DIAGRAM": "/generated-output/docs_107185cb/diagrams/component_diagram.svg",
        "CLASS_DIAGRAM": "/generated-output/docs_107185cb/diagrams/class_diagram.svg",
        "USECASE_DIAGRAM": "/generated-output/docs_107185cb/diagrams/usecase_diagram.svg",
        "ENTITY_RELATIONSHIP_DIAGRAM": "/generated-output/docs_107185cb/diagrams/entity_relationship_diagram.svg"
    },
    "projectSummary": "Project Name: BankApp. Type: Maven. Key Technologies: Maven, Spring Boot (2.1.4.RELEASE), REST APIs, Data Repositories (e.g., Spring Data), Service Layer. Contains 27 classes/interfaces/enums. (Controllers: 2, Services: 1, Repositories: 4).\nExposes 9 API endpoints. (9 REST).\nAn OpenAPI (Swagger) specification is available for REST APIs.\n",
    "openApiSpec": "{\n  \"openapi\" : \"3.0.0\",\n  \"paths\" : {\n    \"/add/{customerNumber}\" : {\n      \"post\" : {\n        \"summary\" : \"com.coding.exercise.bankapp.controller.AccountController.addNewAccount\",\n        \"operationId\" : \"com.coding.exercise.bankapp.controller.AccountController.addNewAccount\",\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"Success\"\n          }\n        }\n      }\n    },\n    \"/{accountNumber}\" : {\n      \"get\" : {\n        \"summary\" : \"com.coding.exercise.bankapp.controller.AccountController.getByAccountNumber\",\n        \"operationId\" : \"com.coding.exercise.bankapp.controller.AccountController.getByAccountNumber\",\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"Success\"\n          }\n        }\n      }\n    },\n    \"/all\" : {\n      \"get\" : {\n        \"summary\" : \"com.coding.exercise.bankapp.controller.CustomerController.getAllCustomers\",\n        \"operationId\" : \"com.coding.exercise.bankapp.controller.CustomerController.getAllCustomers\",\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"Success\"\n          }\n        }\n      }\n    },\n    \"/add\" : {\n      \"post\" : {\n        \"summary\" : \"com.coding.exercise.bankapp.controller.CustomerController.addCustomer\",\n        \"operationId\" : \"com.coding.exercise.bankapp.controller.CustomerController.addCustomer\",\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"Success\"\n          }\n        }\n      }\n    },\n    \"/transfer/{customerNumber}\" : {\n      \"put\" : {\n        \"summary\" : \"com.coding.exercise.bankapp.controller.AccountController.transferDetails\",\n        \"operationId\" : \"com.coding.exercise.bankapp.controller.AccountController.transferDetails\",\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"Success\"\n          }\n        }\n      }\n    },\n    \"/{customerNumber}\" : {\n      \"get\" : {\n        \"summary\" : \"com.coding.exercise.bankapp.controller.CustomerController.getCustomer\",\n        \"operationId\" : \"com.coding.exercise.bankapp.controller.CustomerController.getCustomer\",\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"Success\"\n          }\n        }\n      },\n      \"delete\" : {\n        \"summary\" : \"com.coding.exercise.bankapp.controller.CustomerController.deleteCustomer\",\n        \"operationId\" : \"com.coding.exercise.bankapp.controller.CustomerController.deleteCustomer\",\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"Success\"\n          }\n        }\n      },\n      \"put\" : {\n        \"summary\" : \"com.coding.exercise.bankapp.controller.CustomerController.updateCustomer\",\n        \"operationId\" : \"com.coding.exercise.bankapp.controller.CustomerController.updateCustomer\",\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"Success\"\n          }\n        }\n      }\n    },\n    \"/transactions/{accountNumber}\" : {\n      \"get\" : {\n        \"summary\" : \"com.coding.exercise.bankapp.controller.AccountController.getTransactionByAccountNumber\",\n        \"operationId\" : \"com.coding.exercise.bankapp.controller.AccountController.getTransactionByAccountNumber\",\n        \"responses\" : {\n          \"200\" : {\n            \"description\" : \"Success\"\n          }\n        }\n      }\n    }\n  },\n  \"info\" : {\n    \"title\" : \"BankApp\",\n    \"version\" : \"1.0.0\"\n  }\n}",
    "featureFiles": [],
    "wsdlFilesContent": {},
    "xsdFilesContent": {},
    "parseWarnings": [],
    "callFlows": {
        "com.coding.exercise.bankapp.controller.CustomerController.updateCustomer(CustomerDetails customerDetails, Long customerNumber)": [
            "com.coding.exercise.bankapp.controller.CustomerController.updateCustomer(CustomerDetails customerDetails, Long customerNumber)",
            "com.coding.exercise.bankapp.service.BankingServiceImpl.updateCustomer(CustomerDetails customerDetails, Long customerNumber)",
            "com.coding.exercise.bankapp.repository.CustomerRepository.findByCustomerNumber(Long customerNumber)",
            "com.coding.exercise.bankapp.service.helper.BankingServiceHelper.convertToCustomerEntity(CustomerDetails customerDetails)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.CustomerDetails.getCustomerAddress()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: BankingServiceHelper.convertToAddressEntity(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.CustomerDetails.getContactDetails()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: BankingServiceHelper.convertToContactEntity(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.CustomerDetails.getStatus()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.CustomerDetails.getCustomerNumber()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.CustomerDetails.getLastName()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.CustomerDetails.getMiddleName()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.CustomerDetails.getFirstName()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.builder()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: Customer.builder().firstName(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: Customer.builder().firstName(customerDetails.getFirstName()).middleName(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: Customer.builder().firstName(customerDetails.getFirstName()).middleName(customerDetails.getMiddleName()).lastName(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: Customer.builder().firstName(customerDetails.getFirstName()).middleName(customerDetails.getMiddleName()).lastName(customerDetails.getLastName()).customerNumber(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: Customer.builder().firstName(customerDetails.getFirstName()).middleName(customerDetails.getMiddleName()).lastName(customerDetails.getLastName()).customerNumber(customerDetails.getCustomerNumber()).status(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: Customer.builder().firstName(customerDetails.getFirstName()).middleName(customerDetails.getMiddleName()).lastName(customerDetails.getLastName()).customerNumber(customerDetails.getCustomerNumber()).status(customerDetails.getStatus()).contactDetails(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: Customer.builder().firstName(customerDetails.getFirstName()).middleName(customerDetails.getMiddleName()).lastName(customerDetails.getLastName()).customerNumber(customerDetails.getCustomerNumber()).status(customerDetails.getStatus()).contactDetails(convertToContactEntity(customerDetails.getContactDetails())).customerAddress(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: Customer.builder().firstName(customerDetails.getFirstName()).middleName(customerDetails.getMiddleName()).lastName(customerDetails.getLastName()).customerNumber(customerDetails.getCustomerNumber()).status(customerDetails.getStatus()).contactDetails(convertToContactEntity(customerDetails.getContactDetails())).customerAddress(convertToAddressEntity(customerDetails.getCustomerAddress())).build()",
            "UNRESOLVED_CALL: java.util.Optional.isPresent()",
            "UNRESOLVED_CALL: org.springframework.http.ResponseEntity.status(org.springframework.http.HttpStatus)",
            "UNRESOLVED_CALL: org.springframework.http.ResponseEntity.BodyBuilder.body(T)",
            "UNRESOLVED_CALL: java.util.Optional.get()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getContactDetails()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: java.util.Optional<T>.ofNullable(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: Optional.ofNullable(unmanagedCustomerEntity.getContactDetails()).isPresent()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getContactDetails()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getContactDetails()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.setContactDetails(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getContactDetails()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: unmanagedCustomerEntity.getContactDetails().getEmailId()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Contact.setEmailId(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getContactDetails()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: unmanagedCustomerEntity.getContactDetails().getHomePhone()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Contact.setHomePhone(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getContactDetails()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: unmanagedCustomerEntity.getContactDetails().getWorkPhone()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Contact.setWorkPhone(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getCustomerAddress()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: java.util.Optional<T>.ofNullable(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: Optional.ofNullable(unmanagedCustomerEntity.getCustomerAddress()).isPresent()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getCustomerAddress()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getCustomerAddress()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.setCustomerAddress(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getCustomerAddress()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: unmanagedCustomerEntity.getCustomerAddress().getAddress1()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Address.setAddress1(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getCustomerAddress()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: unmanagedCustomerEntity.getCustomerAddress().getAddress2()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Address.setAddress2(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getCustomerAddress()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: unmanagedCustomerEntity.getCustomerAddress().getCity()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Address.setCity(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getCustomerAddress()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: unmanagedCustomerEntity.getCustomerAddress().getState()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Address.setState(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getCustomerAddress()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: unmanagedCustomerEntity.getCustomerAddress().getZip()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Address.setZip(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getCustomerAddress()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: unmanagedCustomerEntity.getCustomerAddress().getCountry()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Address.setCountry(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.setUpdateDateTime(java.util.Date)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getStatus()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.setStatus(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getFirstName()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.setFirstName(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getMiddleName()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.setMiddleName(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getLastName()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.setLastName(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.setUpdateDateTime(java.util.Date)",
            "UNRESOLVED_CALL: org.springframework.data.repository.CrudRepository.save(S)",
            "UNRESOLVED_CALL: org.springframework.http.ResponseEntity.status(org.springframework.http.HttpStatus)",
            "UNRESOLVED_CALL: org.springframework.http.ResponseEntity.BodyBuilder.body(T)"
        ],
        "com.coding.exercise.bankapp.controller.AccountController.getByAccountNumber(Long accountNumber)": [
            "com.coding.exercise.bankapp.controller.AccountController.getByAccountNumber(Long accountNumber)",
            "com.coding.exercise.bankapp.service.BankingServiceImpl.findByAccountNumber(Long accountNumber)",
            "com.coding.exercise.bankapp.repository.AccountRepository.findByAccountNumber(Long accountNumber)",
            "UNRESOLVED_CALL: java.util.Optional.isPresent()",
            "UNRESOLVED_CALL: org.springframework.http.ResponseEntity.status(org.springframework.http.HttpStatus)",
            "UNRESOLVED_CALL: org.springframework.http.ResponseEntity.BodyBuilder.body(T)",
            "UNRESOLVED_CALL: java.util.Optional.get()",
            "com.coding.exercise.bankapp.service.helper.BankingServiceHelper.convertToAccountDomain(Account account)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Account.getBankInformation()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: BankingServiceHelper.convertToBankInfoDomain(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Account.getAccountStatus()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Account.getAccountNumber()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Account.getAccountBalance()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Account.getAccountType()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.AccountInformation.builder()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: AccountInformation.builder().accountType(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: AccountInformation.builder().accountType(account.getAccountType()).accountBalance(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: AccountInformation.builder().accountType(account.getAccountType()).accountBalance(account.getAccountBalance()).accountNumber(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: AccountInformation.builder().accountType(account.getAccountType()).accountBalance(account.getAccountBalance()).accountNumber(account.getAccountNumber()).accountStatus(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: AccountInformation.builder().accountType(account.getAccountType()).accountBalance(account.getAccountBalance()).accountNumber(account.getAccountNumber()).accountStatus(account.getAccountStatus()).bankInformation(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: AccountInformation.builder().accountType(account.getAccountType()).accountBalance(account.getAccountBalance()).accountNumber(account.getAccountNumber()).accountStatus(account.getAccountStatus()).bankInformation(convertToBankInfoDomain(account.getBankInformation())).build()",
            "UNRESOLVED_CALL: org.springframework.http.ResponseEntity.status(org.springframework.http.HttpStatus)",
            "UNRESOLVED_CALL: org.springframework.http.ResponseEntity.BodyBuilder.body(T)"
        ],
        "com.coding.exercise.bankapp.controller.CustomerController.addCustomer(CustomerDetails customer)": [
            "com.coding.exercise.bankapp.controller.CustomerController.addCustomer(CustomerDetails customer)",
            "com.coding.exercise.bankapp.service.BankingServiceImpl.addCustomer(CustomerDetails customerDetails)",
            "com.coding.exercise.bankapp.service.helper.BankingServiceHelper.convertToCustomerEntity(CustomerDetails customerDetails)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.CustomerDetails.getCustomerAddress()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: BankingServiceHelper.convertToAddressEntity(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.CustomerDetails.getContactDetails()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: BankingServiceHelper.convertToContactEntity(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.CustomerDetails.getStatus()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.CustomerDetails.getCustomerNumber()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.CustomerDetails.getLastName()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.CustomerDetails.getMiddleName()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.CustomerDetails.getFirstName()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.builder()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: Customer.builder().firstName(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: Customer.builder().firstName(customerDetails.getFirstName()).middleName(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: Customer.builder().firstName(customerDetails.getFirstName()).middleName(customerDetails.getMiddleName()).lastName(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: Customer.builder().firstName(customerDetails.getFirstName()).middleName(customerDetails.getMiddleName()).lastName(customerDetails.getLastName()).customerNumber(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: Customer.builder().firstName(customerDetails.getFirstName()).middleName(customerDetails.getMiddleName()).lastName(customerDetails.getLastName()).customerNumber(customerDetails.getCustomerNumber()).status(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: Customer.builder().firstName(customerDetails.getFirstName()).middleName(customerDetails.getMiddleName()).lastName(customerDetails.getLastName()).customerNumber(customerDetails.getCustomerNumber()).status(customerDetails.getStatus()).contactDetails(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: Customer.builder().firstName(customerDetails.getFirstName()).middleName(customerDetails.getMiddleName()).lastName(customerDetails.getLastName()).customerNumber(customerDetails.getCustomerNumber()).status(customerDetails.getStatus()).contactDetails(convertToContactEntity(customerDetails.getContactDetails())).customerAddress(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: Customer.builder().firstName(customerDetails.getFirstName()).middleName(customerDetails.getMiddleName()).lastName(customerDetails.getLastName()).customerNumber(customerDetails.getCustomerNumber()).status(customerDetails.getStatus()).contactDetails(convertToContactEntity(customerDetails.getContactDetails())).customerAddress(convertToAddressEntity(customerDetails.getCustomerAddress())).build()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.setCreateDateTime(java.util.Date)",
            "UNRESOLVED_CALL: org.springframework.data.repository.CrudRepository.save(S)",
            "UNRESOLVED_CALL: org.springframework.http.ResponseEntity.status(org.springframework.http.HttpStatus)",
            "UNRESOLVED_CALL: org.springframework.http.ResponseEntity.BodyBuilder.body(T)"
        ],
        "com.coding.exercise.bankapp.controller.AccountController.addNewAccount(AccountInformation accountInformation, Long customerNumber)": [
            "com.coding.exercise.bankapp.controller.AccountController.addNewAccount(AccountInformation accountInformation, Long customerNumber)",
            "com.coding.exercise.bankapp.service.BankingServiceImpl.addNewAccount(AccountInformation accountInformation, Long customerNumber)",
            "com.coding.exercise.bankapp.repository.CustomerRepository.findByCustomerNumber(Long customerNumber)",
            "UNRESOLVED_CALL: java.util.Optional.isPresent()",
            "com.coding.exercise.bankapp.service.helper.BankingServiceHelper.convertToAccountEntity(AccountInformation accInfo)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.AccountInformation.getBankInformation()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: BankingServiceHelper.convertToBankInfoEntity(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.AccountInformation.getAccountStatus()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.AccountInformation.getAccountNumber()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.AccountInformation.getAccountBalance()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.AccountInformation.getAccountType()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Account.builder()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: Account.builder().accountType(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: Account.builder().accountType(accInfo.getAccountType()).accountBalance(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: Account.builder().accountType(accInfo.getAccountType()).accountBalance(accInfo.getAccountBalance()).accountNumber(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: Account.builder().accountType(accInfo.getAccountType()).accountBalance(accInfo.getAccountBalance()).accountNumber(accInfo.getAccountNumber()).accountStatus(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: Account.builder().accountType(accInfo.getAccountType()).accountBalance(accInfo.getAccountBalance()).accountNumber(accInfo.getAccountNumber()).accountStatus(accInfo.getAccountStatus()).bankInformation(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: Account.builder().accountType(accInfo.getAccountType()).accountBalance(accInfo.getAccountBalance()).accountNumber(accInfo.getAccountNumber()).accountStatus(accInfo.getAccountStatus()).bankInformation(convertToBankInfoEntity(accInfo.getBankInformation())).build()",
            "UNRESOLVED_CALL: org.springframework.data.repository.CrudRepository.save(S)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.AccountInformation.getAccountNumber()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.CustomerAccountXRef.builder()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: CustomerAccountXRef.builder().accountNumber(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: CustomerAccountXRef.builder().accountNumber(accountInformation.getAccountNumber()).customerNumber(java.lang.Long)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: CustomerAccountXRef.builder().accountNumber(accountInformation.getAccountNumber()).customerNumber(customerNumber).build()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.repository.CustomerAccountXRefRepository.save(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: org.springframework.http.ResponseEntity.status(org.springframework.http.HttpStatus)",
            "UNRESOLVED_CALL: org.springframework.http.ResponseEntity.BodyBuilder.body(T)"
        ],
        "com.coding.exercise.bankapp.controller.CustomerController.getAllCustomers()": [
            "com.coding.exercise.bankapp.controller.CustomerController.getAllCustomers()",
            "com.coding.exercise.bankapp.service.BankingServiceImpl.findAll()",
            "UNRESOLVED_CALL: org.springframework.data.repository.CrudRepository.findAll()",
            "com.coding.exercise.bankapp.service.helper.BankingServiceHelper.convertToCustomerDomain(Customer customer)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getCustomerAddress()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: BankingServiceHelper.convertToAddressDomain(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getContactDetails()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: BankingServiceHelper.convertToContactDomain(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getStatus()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getCustomerNumber()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getLastName()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getMiddleName()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getFirstName()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.CustomerDetails.builder()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: CustomerDetails.builder().firstName(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: CustomerDetails.builder().firstName(customer.getFirstName()).middleName(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: CustomerDetails.builder().firstName(customer.getFirstName()).middleName(customer.getMiddleName()).lastName(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: CustomerDetails.builder().firstName(customer.getFirstName()).middleName(customer.getMiddleName()).lastName(customer.getLastName()).customerNumber(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: CustomerDetails.builder().firstName(customer.getFirstName()).middleName(customer.getMiddleName()).lastName(customer.getLastName()).customerNumber(customer.getCustomerNumber()).status(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: CustomerDetails.builder().firstName(customer.getFirstName()).middleName(customer.getMiddleName()).lastName(customer.getLastName()).customerNumber(customer.getCustomerNumber()).status(customer.getStatus()).contactDetails(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: CustomerDetails.builder().firstName(customer.getFirstName()).middleName(customer.getMiddleName()).lastName(customer.getLastName()).customerNumber(customer.getCustomerNumber()).status(customer.getStatus()).contactDetails(convertToContactDomain(customer.getContactDetails())).customerAddress(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: CustomerDetails.builder().firstName(customer.getFirstName()).middleName(customer.getMiddleName()).lastName(customer.getLastName()).customerNumber(customer.getCustomerNumber()).status(customer.getStatus()).contactDetails(convertToContactDomain(customer.getContactDetails())).customerAddress(convertToAddressDomain(customer.getCustomerAddress())).build()",
            "UNRESOLVED_CALL: java.util.List.add(E)",
            "UNRESOLVED_CALL: java.lang.Iterable.forEach(java.util.function.Consumer<? super T>)"
        ],
        "com.coding.exercise.bankapp.controller.AccountController.transferDetails(TransferDetails transferDetails, Long customerNumber)": [
            "com.coding.exercise.bankapp.controller.AccountController.transferDetails(TransferDetails transferDetails, Long customerNumber)",
            "com.coding.exercise.bankapp.service.BankingServiceImpl.transferDetails(TransferDetails transferDetails, Long customerNumber)",
            "com.coding.exercise.bankapp.repository.CustomerRepository.findByCustomerNumber(Long customerNumber)",
            "UNRESOLVED_CALL: java.util.Optional.isPresent()",
            "UNRESOLVED_CALL: org.springframework.http.ResponseEntity.status(org.springframework.http.HttpStatus)",
            "UNRESOLVED_CALL: org.springframework.http.ResponseEntity.BodyBuilder.body(T)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.TransferDetails.getFromAccountNumber()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.repository.AccountRepository.findByAccountNumber(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: java.util.Optional.isPresent()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.TransferDetails.getFromAccountNumber()",
            "UNRESOLVED_CALL: org.springframework.http.ResponseEntity.status(org.springframework.http.HttpStatus)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: org.springframework.http.ResponseEntity.BodyBuilder.body(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: java.util.Optional.get()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.TransferDetails.getToAccountNumber()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.repository.AccountRepository.findByAccountNumber(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: java.util.Optional.isPresent()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.TransferDetails.getToAccountNumber()",
            "UNRESOLVED_CALL: org.springframework.http.ResponseEntity.status(org.springframework.http.HttpStatus)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: org.springframework.http.ResponseEntity.BodyBuilder.body(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: java.util.Optional.get()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Account.getAccountBalance()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.TransferDetails.getTransferAmount()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Account.getAccountBalance()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.TransferDetails.getTransferAmount()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Account.setAccountBalance(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Account.setUpdateDateTime(java.util.Date)",
            "UNRESOLVED_CALL: java.util.List.add(E)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Account.getAccountBalance()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.TransferDetails.getTransferAmount()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Account.setAccountBalance(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Account.setUpdateDateTime(java.util.Date)",
            "UNRESOLVED_CALL: java.util.List.add(E)",
            "UNRESOLVED_CALL: org.springframework.data.repository.CrudRepository.saveAll(java.lang.Iterable<S>)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Account.getAccountNumber()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.service.helper.BankingServiceHelper.createTransaction(com.coding.exercise.bankapp.domain.TransferDetails, UNKNOWN_PARAM_TYPE, java.lang.String)",
            "UNRESOLVED_CALL: org.springframework.data.repository.CrudRepository.save(S)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Account.getAccountNumber()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.service.helper.BankingServiceHelper.createTransaction(com.coding.exercise.bankapp.domain.TransferDetails, UNKNOWN_PARAM_TYPE, java.lang.String)",
            "UNRESOLVED_CALL: org.springframework.data.repository.CrudRepository.save(S)",
            "UNRESOLVED_CALL: org.springframework.http.ResponseEntity.status(org.springframework.http.HttpStatus)",
            "UNRESOLVED_CALL: org.springframework.http.ResponseEntity.BodyBuilder.body(T)",
            "UNRESOLVED_CALL: org.springframework.http.ResponseEntity.status(org.springframework.http.HttpStatus)",
            "UNRESOLVED_CALL: org.springframework.http.ResponseEntity.BodyBuilder.body(T)"
        ],
        "com.coding.exercise.bankapp.controller.CustomerController.getCustomer(Long customerNumber)": [
            "com.coding.exercise.bankapp.controller.CustomerController.getCustomer(Long customerNumber)",
            "com.coding.exercise.bankapp.service.BankingServiceImpl.findByCustomerNumber(Long customerNumber)",
            "com.coding.exercise.bankapp.repository.CustomerRepository.findByCustomerNumber(Long customerNumber)",
            "UNRESOLVED_CALL: java.util.Optional.isPresent()",
            "UNRESOLVED_CALL: java.util.Optional.get()",
            "com.coding.exercise.bankapp.service.helper.BankingServiceHelper.convertToCustomerDomain(Customer customer)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getCustomerAddress()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: BankingServiceHelper.convertToAddressDomain(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getContactDetails()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: BankingServiceHelper.convertToContactDomain(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getStatus()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getCustomerNumber()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getLastName()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getMiddleName()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Customer.getFirstName()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.CustomerDetails.builder()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: CustomerDetails.builder().firstName(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: CustomerDetails.builder().firstName(customer.getFirstName()).middleName(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: CustomerDetails.builder().firstName(customer.getFirstName()).middleName(customer.getMiddleName()).lastName(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: CustomerDetails.builder().firstName(customer.getFirstName()).middleName(customer.getMiddleName()).lastName(customer.getLastName()).customerNumber(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: CustomerDetails.builder().firstName(customer.getFirstName()).middleName(customer.getMiddleName()).lastName(customer.getLastName()).customerNumber(customer.getCustomerNumber()).status(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: CustomerDetails.builder().firstName(customer.getFirstName()).middleName(customer.getMiddleName()).lastName(customer.getLastName()).customerNumber(customer.getCustomerNumber()).status(customer.getStatus()).contactDetails(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: CustomerDetails.builder().firstName(customer.getFirstName()).middleName(customer.getMiddleName()).lastName(customer.getLastName()).customerNumber(customer.getCustomerNumber()).status(customer.getStatus()).contactDetails(convertToContactDomain(customer.getContactDetails())).customerAddress(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: CustomerDetails.builder().firstName(customer.getFirstName()).middleName(customer.getMiddleName()).lastName(customer.getLastName()).customerNumber(customer.getCustomerNumber()).status(customer.getStatus()).contactDetails(convertToContactDomain(customer.getContactDetails())).customerAddress(convertToAddressDomain(customer.getCustomerAddress())).build()"
        ],
        "com.coding.exercise.bankapp.controller.AccountController.getTransactionByAccountNumber(Long accountNumber)": [
            "com.coding.exercise.bankapp.controller.AccountController.getTransactionByAccountNumber(Long accountNumber)",
            "com.coding.exercise.bankapp.service.BankingServiceImpl.findTransactionsByAccountNumber(Long accountNumber)",
            "com.coding.exercise.bankapp.repository.AccountRepository.findByAccountNumber(Long accountNumber)",
            "UNRESOLVED_CALL: java.util.Optional.isPresent()",
            "com.coding.exercise.bankapp.repository.TransactionRepository.findByAccountNumber(Long accountNumber)",
            "UNRESOLVED_CALL: java.util.Optional.isPresent()",
            "com.coding.exercise.bankapp.service.helper.BankingServiceHelper.convertToTransactionDomain(Transaction transaction)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Transaction.getAccountNumber()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Transaction.getTxType()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Transaction.getTxDateTime()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.model.Transaction.getTxAmount()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: com.coding.exercise.bankapp.domain.TransactionDetails.builder()",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: TransactionDetails.builder().txAmount(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: TransactionDetails.builder().txAmount(transaction.getTxAmount()).txDateTime(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: TransactionDetails.builder().txAmount(transaction.getTxAmount()).txDateTime(transaction.getTxDateTime()).txType(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: TransactionDetails.builder().txAmount(transaction.getTxAmount()).txDateTime(transaction.getTxDateTime()).txType(transaction.getTxType()).accountNumber(UNKNOWN_PARAM_TYPE)",
            "UNRESOLVED_CALL: UNRESOLVED_CALL: TransactionDetails.builder().txAmount(transaction.getTxAmount()).txDateTime(transaction.getTxDateTime()).txType(transaction.getTxType()).accountNumber(transaction.getAccountNumber()).build()",
            "UNRESOLVED_CALL: java.util.List.add(E)",
            "UNRESOLVED_CALL: java.util.Optional.get()",
            "UNRESOLVED_CALL: java.lang.Iterable.forEach(java.util.function.Consumer<? super T>)"
        ],
        "com.coding.exercise.bankapp.controller.CustomerController.deleteCustomer(Long customerNumber)": [
            "com.coding.exercise.bankapp.controller.CustomerController.deleteCustomer(Long customerNumber)",
            "com.coding.exercise.bankapp.service.BankingServiceImpl.deleteCustomer(Long customerNumber)",
            "com.coding.exercise.bankapp.repository.CustomerRepository.findByCustomerNumber(Long customerNumber)",
            "UNRESOLVED_CALL: java.util.Optional.isPresent()",
            "UNRESOLVED_CALL: org.springframework.http.ResponseEntity.status(org.springframework.http.HttpStatus)",
            "UNRESOLVED_CALL: org.springframework.http.ResponseEntity.BodyBuilder.body(T)",
            "UNRESOLVED_CALL: java.util.Optional.get()",
            "UNRESOLVED_CALL: org.springframework.data.repository.CrudRepository.delete(T)",
            "UNRESOLVED_CALL: org.springframework.http.ResponseEntity.status(org.springframework.http.HttpStatus)",
            "UNRESOLVED_CALL: org.springframework.http.ResponseEntity.BodyBuilder.body(T)"
        ]
    },
    "sequenceDiagrams": {
        "com.coding.exercise.bankapp.controller.CustomerController.updateCustomer(CustomerDetails customerDetails, Long customerNumber)": "/generated-output/docs_107185cb/diagrams/sequence_diagram_com_coding_exercise_bankapp_controller_CustomerController_updateCustomer_CustomerDetails_customerDetails__Long_customerNumber_.svg",
        "com.coding.exercise.bankapp.controller.AccountController.getByAccountNumber(Long accountNumber)": "/generated-output/docs_107185cb/diagrams/sequence_diagram_com_coding_exercise_bankapp_controller_AccountController_getByAccountNumber_Long_accountNumber_.svg",
        "com.coding.exercise.bankapp.controller.CustomerController.addCustomer(CustomerDetails customer)": "/generated-output/docs_107185cb/diagrams/sequence_diagram_com_coding_exercise_bankapp_controller_CustomerController_addCustomer_CustomerDetails_customer_.svg",
        "com.coding.exercise.bankapp.controller.AccountController.addNewAccount(AccountInformation accountInformation, Long customerNumber)": "/generated-output/docs_107185cb/diagrams/sequence_diagram_com_coding_exercise_bankapp_controller_AccountController_addNewAccount_AccountInformation_accountInformation__Long_customerNumber_.svg",
        "com.coding.exercise.bankapp.controller.CustomerController.getAllCustomers()": "/generated-output/docs_107185cb/diagrams/sequence_diagram_com_coding_exercise_bankapp_controller_CustomerController_getAllCustomers__.svg",
        "com.coding.exercise.bankapp.controller.AccountController.transferDetails(TransferDetails transferDetails, Long customerNumber)": "/generated-output/docs_107185cb/diagrams/sequence_diagram_com_coding_exercise_bankapp_controller_AccountController_transferDetails_TransferDetails_transferDetails__Long_customerNumber_.svg",
        "com.coding.exercise.bankapp.controller.CustomerController.getCustomer(Long customerNumber)": "/generated-output/docs_107185cb/diagrams/sequence_diagram_com_coding_exercise_bankapp_controller_CustomerController_getCustomer_Long_customerNumber_.svg",
        "com.coding.exercise.bankapp.controller.AccountController.getTransactionByAccountNumber(Long accountNumber)": "/generated-output/docs_107185cb/diagrams/sequence_diagram_com_coding_exercise_bankapp_controller_AccountController_getTransactionByAccountNumber_Long_accountNumber_.svg",
        "com.coding.exercise.bankapp.controller.CustomerController.deleteCustomer(Long customerNumber)": "/generated-output/docs_107185cb/diagrams/sequence_diagram_com_coding_exercise_bankapp_controller_CustomerController_deleteCustomer_Long_customerNumber_.svg"
    },
    "daoOperations": {
        "com.coding.exercise.bankapp.service.BankingServiceImpl": [
            {
                "methodName": null,
                "sqlQuery": "UPDATE Customer SET ... WHERE ...",
                "operationType": "UPDATE",
                "tables": [
                    "Customer"
                ]
            },
            {
                "methodName": null,
                "sqlQuery": "DELETE FROM Customer WHERE ...",
                "operationType": "DELETE",
                "tables": [
                    "Customer"
                ]
            },
            {
                "methodName": null,
                "sqlQuery": "UPDATE Customer SET ... WHERE ...",
                "operationType": "UPDATE",
                "tables": [
                    "Customer"
                ]
            },
            {
                "methodName": null,
                "sqlQuery": "DELETE FROM Customer WHERE ...",
                "operationType": "DELETE",
                "tables": [
                    "Customer"
                ]
            }
        ],
        "com.coding.exercise.bankapp.service.BankingService": [
            {
                "methodName": null,
                "sqlQuery": "UPDATE Customer SET ... WHERE ...",
                "operationType": "UPDATE",
                "tables": [
                    "Customer"
                ]
            },
            {
                "methodName": null,
                "sqlQuery": "DELETE FROM Customer WHERE ...",
                "operationType": "DELETE",
                "tables": [
                    "Customer"
                ]
            },
            {
                "methodName": null,
                "sqlQuery": "UPDATE Customer SET ... WHERE ...",
                "operationType": "UPDATE",
                "tables": [
                    "Customer"
                ]
            },
            {
                "methodName": null,
                "sqlQuery": "DELETE FROM Customer WHERE ...",
                "operationType": "DELETE",
                "tables": [
                    "Customer"
                ]
            }
        ],
        "com.coding.exercise.bankapp.controller.CustomerController": [
            {
                "methodName": null,
                "sqlQuery": "SELECT * FROM Customer",
                "operationType": "SELECT",
                "tables": [
                    "Customer"
                ]
            },
            {
                "methodName": null,
                "sqlQuery": "SELECT * FROM Customer",
                "operationType": "SELECT",
                "tables": [
                    "Customer"
                ]
            },
            {
                "methodName": null,
                "sqlQuery": "UPDATE Customer SET ... WHERE ...",
                "operationType": "UPDATE",
                "tables": [
                    "Customer"
                ]
            },
            {
                "methodName": null,
                "sqlQuery": "DELETE FROM Customer WHERE ...",
                "operationType": "DELETE",
                "tables": [
                    "Customer"
                ]
            },
            {
                "methodName": null,
                "sqlQuery": "SELECT * FROM Customer",
                "operationType": "SELECT",
                "tables": [
                    "Customer"
                ]
            },
            {
                "methodName": null,
                "sqlQuery": "SELECT * FROM Customer",
                "operationType": "SELECT",
                "tables": [
                    "Customer"
                ]
            },
            {
                "methodName": null,
                "sqlQuery": "UPDATE Customer SET ... WHERE ...",
                "operationType": "UPDATE",
                "tables": [
                    "Customer"
                ]
            },
            {
                "methodName": null,
                "sqlQuery": "DELETE FROM Customer WHERE ...",
                "operationType": "DELETE",
                "tables": [
                    "Customer"
                ]
            }
        ]
    },
    "dbDiagramPath": "/generated-output/docs_107185cb/diagrams/database_schema.svg",
    "dbAnalysis": {
        "operationsByClass": {
            "com.coding.exercise.bankapp.service.BankingServiceImpl": [
                {
                    "methodName": null,
                    "sqlQuery": "UPDATE Customer SET ... WHERE ...",
                    "operationType": "UPDATE",
                    "tables": [
                        "Customer"
                    ]
                },
                {
                    "methodName": null,
                    "sqlQuery": "DELETE FROM Customer WHERE ...",
                    "operationType": "DELETE",
                    "tables": [
                        "Customer"
                    ]
                },
                {
                    "methodName": null,
                    "sqlQuery": "UPDATE Customer SET ... WHERE ...",
                    "operationType": "UPDATE",
                    "tables": [
                        "Customer"
                    ]
                },
                {
                    "methodName": null,
                    "sqlQuery": "DELETE FROM Customer WHERE ...",
                    "operationType": "DELETE",
                    "tables": [
                        "Customer"
                    ]
                }
            ],
            "com.coding.exercise.bankapp.service.BankingService": [
                {
                    "methodName": null,
                    "sqlQuery": "UPDATE Customer SET ... WHERE ...",
                    "operationType": "UPDATE",
                    "tables": [
                        "Customer"
                    ]
                },
                {
                    "methodName": null,
                    "sqlQuery": "DELETE FROM Customer WHERE ...",
                    "operationType": "DELETE",
                    "tables": [
                        "Customer"
                    ]
                },
                {
                    "methodName": null,
                    "sqlQuery": "UPDATE Customer SET ... WHERE ...",
                    "operationType": "UPDATE",
                    "tables": [
                        "Customer"
                    ]
                },
                {
                    "methodName": null,
                    "sqlQuery": "DELETE FROM Customer WHERE ...",
                    "operationType": "DELETE",
                    "tables": [
                        "Customer"
                    ]
                }
            ],
            "com.coding.exercise.bankapp.controller.CustomerController": [
                {
                    "methodName": null,
                    "sqlQuery": "SELECT * FROM Customer",
                    "operationType": "SELECT",
                    "tables": [
                        "Customer"
                    ]
                },
                {
                    "methodName": null,
                    "sqlQuery": "SELECT * FROM Customer",
                    "operationType": "SELECT",
                    "tables": [
                        "Customer"
                    ]
                },
                {
                    "methodName": null,
                    "sqlQuery": "UPDATE Customer SET ... WHERE ...",
                    "operationType": "UPDATE",
                    "tables": [
                        "Customer"
                    ]
                },
                {
                    "methodName": null,
                    "sqlQuery": "DELETE FROM Customer WHERE ...",
                    "operationType": "DELETE",
                    "tables": [
                        "Customer"
                    ]
                },
                {
                    "methodName": null,
                    "sqlQuery": "SELECT * FROM Customer",
                    "operationType": "SELECT",
                    "tables": [
                        "Customer"
                    ]
                },
                {
                    "methodName": null,
                    "sqlQuery": "SELECT * FROM Customer",
                    "operationType": "SELECT",
                    "tables": [
                        "Customer"
                    ]
                },
                {
                    "methodName": null,
                    "sqlQuery": "UPDATE Customer SET ... WHERE ...",
                    "operationType": "UPDATE",
                    "tables": [
                        "Customer"
                    ]
                },
                {
                    "methodName": null,
                    "sqlQuery": "DELETE FROM Customer WHERE ...",
                    "operationType": "DELETE",
                    "tables": [
                        "Customer"
                    ]
                }
            ]
        },
        "classesByEntity": {
            "Customer": [
                "com.coding.exercise.bankapp.service.BankingServiceImpl",
                "com.coding.exercise.bankapp.service.BankingService",
                "com.coding.exercise.bankapp.controller.CustomerController"
            ]
        }
    },
    "logStatements": [],
    "springBootProject": true
}